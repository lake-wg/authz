{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-07-22T01:59:57.979518+00:00",
  "repo": "lake-wg/authz",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 1,
      "id": "I_kwDOKiCa6c54mu3L",
      "title": "Voucher is not bound to U",
      "url": "https://github.com/lake-wg/authz/issues/1",
      "state": "CLOSED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This was previously discussed in the IETF-118, and the goal is to discuss whether it is desirable / necessary to have the voucher be bound to U.\r\n\r\nOne open question here is: how can V be sure that the Voucher received from W is bound to the sender of message_3?",
      "createdAt": "2023-12-04T09:40:17Z",
      "updatedAt": "2024-04-18T09:53:31Z",
      "closedAt": "2024-04-18T09:53:30Z",
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "In a design team meeting last Friday (Dec 1) the following comments were raised:\r\n- the Voucher is protected by EDHOC session via the transcript hash\r\n- there is a consideration about doing authorization before authentication, that needs to be checked",
          "createdAt": "2023-12-04T09:42:03Z",
          "updatedAt": "2023-12-04T14:45:34Z"
        },
        {
          "author": "sftcd",
          "authorAssociation": "NONE",
          "body": "\r\n\r\nOn 04/12/2023 09:42, Geovane Fedrecheski wrote:\r\n> In a meeting last Friday (Dec 1)\r\n\r\nWhat meeting was that? (Even though this is only a github comment,\r\nit's generally good to document that kind of thing so the IETF WG\r\ncan better evaluate outcomes from such a meeting.)\r\n\r\nTa,\r\nS.\r\n",
          "createdAt": "2023-12-04T11:24:44Z",
          "updatedAt": "2023-12-04T11:24:44Z"
        },
        {
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@sftcd Good question. This was a design team meeting following up on the comments from IETF 118. Geovane is holding the pen driving the work forward :-)",
          "createdAt": "2023-12-04T13:49:43Z",
          "updatedAt": "2023-12-04T13:49:43Z"
        },
        {
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "body": "(@geonnave Maybe edit comments and make global replace \"meeting\" -> \"design team meeting\".)",
          "createdAt": "2023-12-04T14:37:06Z",
          "updatedAt": "2023-12-04T14:37:06Z"
        }
      ]
    },
    {
      "number": 2,
      "id": "I_kwDOKiCa6c54mwA6",
      "title": "Add EAD_3 field?",
      "url": "https://github.com/lake-wg/authz/issues/2",
      "state": "CLOSED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "After receiving message_3, V may want to check that CRED_U is bound to the voucher received from W (see #1). In this case, V would need to (1) have the voucher saved on state, and (2) it would have to dispatch a \"check CRED_U against Voucher\" action.\r\n\r\nRight now, on the implementation side, dispatching any EAD-related action is done via detecting the presence of an EAD field (since the core EDHOC implementation must be agnostic of EAD items).\r\n\r\nThus, it may make sense to add an EAD_3 field to enable such a dispatch.",
      "createdAt": "2023-12-04T09:42:50Z",
      "updatedAt": "2024-04-18T09:54:11Z",
      "closedAt": "2024-04-18T09:54:11Z",
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "As discussed in the design team meeting, the next step is to think of additional scenarios where this might be needed (if any).",
          "createdAt": "2023-12-04T09:43:30Z",
          "updatedAt": "2023-12-04T14:45:59Z"
        }
      ]
    },
    {
      "number": 3,
      "id": "I_kwDOKiCa6c54mweB",
      "title": " Should the voucher include a scope?",
      "url": "https://github.com/lake-wg/authz/issues/3",
      "state": "CLOSED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "During the IETF-118 meeting, it was discussed whether the Voucher should include a scope. One simple alternative would be to propose an opaque \"scope\" field whose usage details would be left to the application.",
      "createdAt": "2023-12-04T09:43:53Z",
      "updatedAt": "2024-03-04T17:21:43Z",
      "closedAt": "2024-03-04T17:21:43Z",
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "As discussed in the last design team meeting, we do plan to include a scope field. That may involve updating the Voucher structure to be a COSE_Encrypt0, where ciphertext is the concatenation of encrypted-plaintext (empty) and the voucher MAC. The scope can then be included in the encrypted-plaintext or in the (un)protected header. \r\n\r\nThe scope would convey information to U about V, such as capabilities of V, usage policies, etc. I think we need to think of a few concrete examples here.",
          "createdAt": "2023-12-04T09:51:42Z",
          "updatedAt": "2023-12-04T14:46:22Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "After the merge of #11, the voucher can now include extra data, such as a scope. The actual contents that we may wish to send, however, may not be a scope as much as _assertions_ or _directives_ from W to U. ",
          "createdAt": "2024-02-26T14:29:02Z",
          "updatedAt": "2024-02-26T14:29:02Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "I_kwDOKiCa6c58nPKX",
      "title": "Add error handling",
      "url": "https://github.com/lake-wg/authz/issues/5",
      "state": "CLOSED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The protocol should include an error handling mechanism. Below is a first sketch as well as a few considerations to be discussed:\r\n\r\n```\r\nW may answer Voucher Request with a Voucher Error (VERR):\r\n\r\nVERR = (code: uint, ?info: bstr)\r\n```\r\n\r\nNotes:\r\n- security: VERR should be encrypted and integrity-protected, e.g. `COSE_Encrypt0` from W to U, just like `ENC_ID` on `EAD_1`\r\n- how to transport: \r\n  - W to V: the encrypted VERR is sent via the secure channel already established between both parties\r\n  - V to U: we can possibly reuse EDHOC's error signalling (see [lake-edhoc#section-6](https://www.ietf.org/archive/id/draft-ietf-lake-edhoc-22.html#section-6)). Thus the encrypted VERR could be the content of `ERR_INFO`. Note that this might require declaring a new EDHOC `ERR_CODE`, so that `ERR_INFO` can have a content of type `bstr`.\r\n\r\ncc @gselander @malishav ",
      "createdAt": "2024-01-19T14:15:31Z",
      "updatedAt": "2024-02-26T14:30:25Z",
      "closedAt": "2024-02-26T14:30:25Z",
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Solved in #9.",
          "createdAt": "2024-02-26T14:30:25Z",
          "updatedAt": "2024-02-26T14:30:25Z"
        }
      ]
    },
    {
      "number": 6,
      "id": "I_kwDOKiCa6c58nZaT",
      "title": "Appendix or Examples section",
      "url": "https://github.com/lake-wg/authz/issues/6",
      "state": "CLOSED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "A section with example use cases for the protocol can improve readability of the spec.\r\n\r\nHere is a brief list of use cases that can serve as base for such section:\r\n\r\n```\r\n### UC1: voucher works, 1 gateway\r\n\r\npremises:\r\n- devices = [u1, \u2026]\r\n- discovered_gateways = [v1]\r\n- W\u2019s allowlist = v1: [u1]\r\n\r\nscenarios:\r\n1. device u1 tries to join via gateway v1, W accepts and replies Voucher Response\r\n\r\n### UC2: basic error response, 1 gateway\r\n\r\npremises:\r\n- devices = [u1, \u2026]\r\n- discovered_gateways = [v1]\r\n- W\u2019s allowlist = v1: []\r\n\r\nscenarios:\r\n1. device u1 tries to join via gateway v1, W denies and replies Voucher Error\r\n\r\n### UC3: basic error response, 5 gateways\r\n\r\npremises:\r\n- devices = [u1, \u2026]\r\n- discovered_gateways = [v1, v2, v3, v4, v5] // sorted e.g. by rssi\r\n- W\u2019s allowlist = v1: [], v2: [], v3: [u1], v4: [u1], v5: []\r\n\r\nscenarios:\r\n1. device u1 tries to join via gateway v1, W denies and replies Voucher Error\r\n2. device u1 tries to join via gateway v2, W denies and replies Voucher Error\r\n3. device u1 tries to join via gateway v3, W accepts and replies Voucher Response\r\n\r\n### UC4: error includes gateway hint, 5 gateways\r\n\r\npremises:\r\n- devices = [u1, \u2026]\r\n- discovered_gateways = [v1, v2, v3, v4, v5] // sorted e.g. by rssi\r\n- W\u2019s allowlist = v1: [], v2: [], v3: [u1], v4: [u1], v5: []\r\n\r\nscenarios:\r\n1. device u1 tries to join via gateway v1, W denies and replies Voucher Error with hint = [v3, v4]\r\n2. device u1 tries to join via gateway v3, W accepts and replies Voucher Response\r\n```",
      "createdAt": "2024-01-19T14:40:26Z",
      "updatedAt": "2024-03-04T17:20:42Z",
      "closedAt": "2024-03-04T17:20:42Z",
      "comments": [
        {
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Looks good to me. I think UC1 & UC4 (scenario 1) could be sufficient, perhaps start with them?",
          "createdAt": "2024-01-26T12:16:41Z",
          "updatedAt": "2024-01-26T12:16:41Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Addressed in #10 ",
          "createdAt": "2024-03-04T17:20:42Z",
          "updatedAt": "2024-03-04T17:20:42Z"
        }
      ]
    },
    {
      "number": 7,
      "id": "I_kwDOKiCa6c58naZT",
      "title": "Device enrollment in the presence of many Vs",
      "url": "https://github.com/lake-wg/authz/issues/7",
      "state": "CLOSED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The access policies in W may contain a mapping of which Us are authorized to join via which Vs, e.g. `{v1: [u1, u2], v2: [u3]}`. In this case, if a device detects many Vs in its vicinity, it may have to try to exhaustively try to enroll via different Vs until it finds the right one (see use case UC3 in issue #6).\r\n\r\nA possible solution includes sharing more information between V and W, so that this process can be sped up. Here is an initial sketch of how it could look like:\r\n\r\n```\r\n# Enrollment hints\r\nThis section defines optional fields with the purpose of improving protocol scalability, aiming to reduce battery usage and enrollment delay.\r\nThe main use case is when several potential gateways (V) are detected by U's radio, which can lead to U trying to enroll (and failing) several times until it finds a suitable V.\r\n\r\n## Domain Authenticator hints\r\nIn case W denies the enrollment of U to a given V, a list of Domain Authenticator hints (v_hints) can be sent from W to U.\r\nThe hint is optional and is sent as part of an error message.\r\nIt consists of a list of application-defined identifiers of V (e.g. MAC addresses, SSIDs, PAN IDs, etc.), as defined below:\r\n\r\nv_hints = [ 1* bstr ]\r\n\r\n## Device hints\r\nU may send a Device hint (u_hint) so that it can help W to select which Vs to include in v_hints.\r\nThis can be useful in large scale scenarios with many gateways (V).\r\nThe hint is an optional field in EAD_1, and it must be encrypted.\r\nThe hint itself is application dependent, and can contain GPS coordinates, application-specific tags, the list of Vs detected by U, or other relevant information.\r\nIt is defined as follows:\r\n\r\nu_hint: [ 1* bstr ]\r\n```\r\n\r\nNotes:\r\n- related to #5, as `v_hint` would be carried in the Voucher Error message\r\n- all hints should be encrypted and integrity-protected, e.g., via `COSE_Encrypt0`",
      "createdAt": "2024-01-19T14:42:53Z",
      "updatedAt": "2024-03-04T15:21:58Z",
      "closedAt": "2024-03-04T15:21:58Z",
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Solved in #13 ",
          "createdAt": "2024-03-04T15:21:58Z",
          "updatedAt": "2024-03-04T15:21:58Z"
        }
      ]
    },
    {
      "number": 17,
      "id": "I_kwDOKiCa6c6BK6d5",
      "title": "Clarifications on the usage of OPAQUE_INFO",
      "url": "https://github.com/lake-wg/authz/issues/17",
      "state": "CLOSED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "> If could be good to clarify that \u201cOPAQUE_INFO\u201d is opaque when viewed as information element in EDHOC. It is opaque to V but the application in U and W can read the contents.\r\n\r\n^ by @gselander in [PR 13](https://github.com/lake-wg/authz/pull/13#issuecomment-1976265705).",
      "createdAt": "2024-03-04T15:29:14Z",
      "updatedAt": "2024-03-04T16:47:57Z",
      "closedAt": "2024-03-04T16:47:56Z",
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Solved in #18 ",
          "createdAt": "2024-03-04T16:47:57Z",
          "updatedAt": "2024-03-04T16:47:57Z"
        }
      ]
    },
    {
      "number": 19,
      "id": "I_kwDOKiCa6c6BK7k0",
      "title": "Explain error response in the context of the VREQ/VRES protocol",
      "url": "https://github.com/lake-wg/authz/issues/19",
      "state": "CLOSED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "See [previous comment](https://github.com/lake-wg/authz/pull/13#issuecomment-1976281759) by @gselander:\r\n\r\n```\r\nOne more comment:\r\n\r\n\"W generates error_content and transfers it to V via the secure connection.\"\r\n\r\nWe should explain how this message is part of the VREQ/VRES protocol. This is not necessary an error from the point of view of that protocol. If we don't have a quick fix, make a separate issue.\r\n\r\nEdit: For example, add a flag in VRES\r\n\r\nVoucher_Response = [\r\nmessage_1: bstr,\r\nflag: int,\r\nresponse: bstr,\r\n? opaque_state: bstr\r\n]\r\n\r\nflag = -1 is used with response = Voucher. In case of reject, then (flag, response) = error_content.\r\n\r\n(or other preferred construction)\r\n\r\nEdit: Or reserve REJECT_TYPE = 0 for the no reject case. The flag/ REJECT_TYPE thus becomes a status code for the VREQ/VRES protocol. Maybe rename \"REJECT_TYPE\" accordingly. Or leave out for this update.\r\n```",
      "createdAt": "2024-03-04T15:31:19Z",
      "updatedAt": "2024-07-01T09:07:48Z",
      "closedAt": "2024-07-01T09:07:48Z",
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Solved in #28 ",
          "createdAt": "2024-07-01T09:07:48Z",
          "updatedAt": "2024-07-01T09:07:48Z"
        }
      ]
    },
    {
      "number": 20,
      "id": "I_kwDOKiCa6c6CK3L8",
      "title": "Document's github link is obsolete",
      "url": "https://github.com/lake-wg/authz/issues/20",
      "state": "CLOSED",
      "author": "chrysn",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The \"About the document\" section still points to the old repo at EricssonResearch rather than to the current one.\r\n\r\nIn parallel, please consider linking this from the document's \"additional resources\" list in the data tracker (@malishav should be allowed to do this as a chair).",
      "createdAt": "2024-03-13T12:28:22Z",
      "updatedAt": "2024-03-13T14:04:42Z",
      "closedAt": "2024-03-13T14:04:42Z",
      "comments": [
        {
          "author": "malishav",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks for the note, just updated the datatracker. I let Geovane update the\r\ndocument.\r\n\r\nOn Wed, Mar 13, 2024 at 13:28 chrysn ***@***.***> wrote:\r\n\r\n> The \"About the document\" section still points to the old repo at\r\n> EricssonResearch rather than to the current one.\r\n>\r\n> In parallel, please consider linking this from the document's \"additional\r\n> resources\" list in the data tracker ***@***.***\r\n> <https://github.com/malishav> should be allowed to do this as a chair).\r\n>\r\n> \u2014\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/lake-wg/authz/issues/20>, or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AB2M6Q3XDS53B4OIBYQLL23YYBA7XAVCNFSM6AAAAABEUB55D2VHI2DSMVQWIX3LMV43ASLTON2WKOZSGE4DGOBYGU2TMNA>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***>\r\n>\r\n",
          "createdAt": "2024-03-13T13:07:48Z",
          "updatedAt": "2024-03-13T13:07:48Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Fixed!",
          "createdAt": "2024-03-13T14:04:42Z",
          "updatedAt": "2024-03-13T14:04:42Z"
        }
      ]
    },
    {
      "number": 21,
      "id": "I_kwDOKiCa6c6CK3YP",
      "title": " authz with U as R and V as I",
      "url": "https://github.com/lake-wg/authz/issues/21",
      "state": "CLOSED",
      "author": "chrysn",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "(Moved from https://github.com/EricssonResearch/ace-ake-authz/issues/27)\r\n\r\nProcessing some deployment scenarios (involving CoAP-over-GATT), I've found that sometimes the roles of I and R would be reversed.\r\n\r\nApart from the aspect of vulnerable-identities, is there anything fundamentally keeping the ENC_U_INFO from being in message 2, and the voucher from being in message 3? The credential database lookup would then be against ID_CRED_R, but that'd be the same interface as for ID_CRED_I.\r\n\r\nLet's not sink too much time into this if it turns out to be complicated -- I'm not sure whether running EDHOC over CoAP in reverse flow may not be the better choice in this situation anyway, but if this has ever been contemplated in other places, this issue might be a good spot to spool ideas.",
      "createdAt": "2024-03-13T12:28:46Z",
      "updatedAt": "2025-05-23T16:19:54Z",
      "closedAt": "2025-05-23T16:19:53Z",
      "comments": [
        {
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think that we have made some significant optimizations assuming U as I.\r\nI think that there are different optimizations that occur if V is I.\r\nCoAP-over-GATT probably does not need a discovery process whereby V discovers a U that it should initiate to.\r\n\r\nV as I has many advantages when it comes to managing bandwidth.\r\n",
          "createdAt": "2024-03-13T15:07:33Z",
          "updatedAt": "2024-03-13T15:07:33Z"
        },
        {
          "author": "chrysn",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Indeed the flow in the GATT case would be that U sends a beacon that contains a 32bit hash of LOC_W, so V would likely already have a good idea of what W would be (given that in a list of peered W, this likely only matches 1 or at most 3) \u2013 so the first EAD would only contain LOC_W for confirmation (or maybe not at all).",
          "createdAt": "2024-03-13T15:51:09Z",
          "updatedAt": "2024-03-13T15:51:09Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "At a first glance I think it could work. \r\n\r\nApart from just using EAD_2 / EAD_3 instead of EAD_1 / EAD_2, it would also have some impact on the VREQ/VRES protocol, which currently sends message_1 to W, which is then used in the composition of the Voucher:\r\n\r\n```\r\nexternal_aad = (\r\n    H(message_1): bstr, / could be changed to `H(message_1 || message_2)` (or even just reuse `TH_3`) /\r\n    CRED_V:       bstr,\r\n)\r\n```\r\n",
          "createdAt": "2024-03-19T11:13:29Z",
          "updatedAt": "2024-03-19T11:13:29Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "If you think #41 addresses your comment, could you please close this issue @chrysn?",
          "createdAt": "2024-10-18T12:56:49Z",
          "updatedAt": "2024-10-18T12:56:49Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@chrysn FYI in PR #45, I went into all the details of what changes during each processing step, if this change is to be supported.",
          "createdAt": "2025-02-28T14:20:12Z",
          "updatedAt": "2025-02-28T14:20:12Z"
        },
        {
          "author": "chrysn",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This looks well supported in the editor's copy through the ELA reverse flow. Thanks, closing.",
          "createdAt": "2025-05-23T16:19:53Z",
          "updatedAt": "2025-05-23T16:19:53Z"
        }
      ]
    },
    {
      "number": 23,
      "id": "I_kwDOKiCa6c6Cs3ic",
      "title": "Can we turn opaque_info into more concrete fields, in EAD_1?",
      "url": "https://github.com/lake-wg/authz/issues/23",
      "state": "CLOSED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I am interested in exploring how we can reduce, as much as possible, the use of opaque_info, for the following reasons:\r\n1. interoperability\r\n2. the problem of providing \"free connectivity\" in EAD_1\r\n\r\n## Proposal\r\nThe proposal so far is to replace `opaque_info` by `nearby_vs`:\r\n```\r\nnearby_vs = {\r\n  / macs-addrs   /     1: [ + bstr ],\r\n  / pan-ids      /     2: [ + bstr ],\r\n  / ipv4-addrs   /     3: [ + bstr ],\r\n  / ipv6-addrs   /     4: [ + bstr ],\r\n  / app-specific / 16-31: [ + bstr ],\r\n}\r\n```\r\n\r\nSome comments:\r\n1. the idea is to satisfy the problem of sending a list of \"nearby Vs\", while achieving better interoperability, in a way that is agnostic to the type of network identifier\r\n2. for now, the proposal assumes that \"nearby Vs\" is the **only** type of contextual data that U would ever want to send to W\r\n3. do we have concrete examples of other kind of contextual data that should be sent to W?\r\n",
      "createdAt": "2024-03-18T17:08:13Z",
      "updatedAt": "2024-10-18T12:57:27Z",
      "closedAt": "2024-10-18T12:57:27Z",
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Closing as obsolete after merging of #41.",
          "createdAt": "2024-10-18T12:57:27Z",
          "updatedAt": "2024-10-18T12:57:27Z"
        }
      ]
    },
    {
      "number": 24,
      "id": "I_kwDOKiCa6c6CzUrf",
      "title": "Can we turn opaque_info into more concrete fields, in the Voucher?",
      "url": "https://github.com/lake-wg/authz/issues/24",
      "state": "CLOSED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The idea here is the same as in #23.\r\n\r\n## Proposal\r\nUpdate Voucher so that instead of carrying `opaque_info`, it looks like this:\r\n```\r\nplaintext of Voucher = (\r\n  role-of-v:        uint,  / choice(access-provider=1, owner=2) /\r\n  directives-for-u: bstr,  / application-specific, e.g. frequencies, operation mode, etc /\r\n)\r\n```\r\n\r\nComments:\r\n- the field `role-of-v` tells U whether V should be considered an owner/administrator, or simply a connectivity provider. This is more or less equivalent to the \"assertion\" item in BRSKI's Voucher, with the difference that no claim is made about \"how to verify the ownership of V upon U\". Another reason that motivated me in considering this field was a discussion I had with @chrysn about the \"admin status of V\".\r\n- `directives-for-u` should contain any information that W may find useful to transmit to U. In a way, this is still equivalent to `opaque_data`, but just with a name that conveys the intention of the field.\r\n\r\nQuestions:\r\n- does `role-of-v` make sense? are there other roles that should be considered?\r\n- is there anything else that is missing? is there other type of information that should / could be sent in the Voucher, that would not be covered by the suggested fields?",
      "createdAt": "2024-03-19T09:48:20Z",
      "updatedAt": "2025-05-26T07:52:33Z",
      "closedAt": "2025-05-26T07:52:32Z",
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Logging some updates here.\r\n\r\n### 1. Specifying the fields `role-of-v` and `directives-for-u`\r\nDuring a design team meeting on April 11, we discussed that the two items discussed above could be specified in an appendix (therefore keeping `OPAQUE_INFO` as part of the Voucher).\r\n\r\nThe concern here is making the protocol too closed, while we are still not sure of all potential use cases and needs.\r\n\r\nJust as a quick note, to me this starts to resemble a bit the case of EAP, where the main protocol is specified in a higher level, and then certain details are defined in later specifications. It differs from EAP as the authentication *is defined* (it relies on EDHOC's), but is similar to EAP as the underlying transport *is not defined*. Might bring this discussion into a separate issue.\r\n\r\n### 2. `directives-for-u`: use case with LoRaWAN\r\nThe Join-accept message defined in LoRaWAN v1.1 \u00b9 is sent as a response to a successful Join-request.\r\nJoin-accept contains the following fields: JoinNonce, Home_NetID, DevAddr, DownLinkSettings, RxDelay, ChannelFrequencyList.\r\n\r\nThus, when using `lake-authz` with LoRaWAN, the `directives-for-u` field could contain the fields of a Join-accept message.\r\n\r\n\u00b9 https://resources.lora-alliance.org/technical-specifications/lorawan-specification-v1-1",
          "createdAt": "2024-04-15T14:56:37Z",
          "updatedAt": "2024-04-15T14:56:37Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I now think this is really an application issue, so closing it.",
          "createdAt": "2025-05-26T07:52:32Z",
          "updatedAt": "2025-05-26T07:52:32Z"
        }
      ]
    },
    {
      "number": 25,
      "id": "I_kwDOKiCa6c6Czb9b",
      "title": "Can we turn opaque_info into more concrete fields, in the Error message?",
      "url": "https://github.com/lake-wg/authz/issues/25",
      "state": "CLOSED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The rationale is similar to #23.\r\n\r\n## Proposal\r\nIn the EDHOC error \"Access Denied\", when REJECT_TYPE = 1, have REJECT_INFO look like this:\r\n```\r\nplaintext of REJECT_INFO = (\r\n  suggested-vs:              map,  / same format as `nearby_vs` /\r\n  additional-recovery-info:  bstr, / application-specific actionable information for error recovery /\r\n)\r\n```\r\n\r\nComments:\r\n- `suggested-vs` is equivalent to the current `v_hint` field ([Appendix B](https://www.ietf.org/archive/id/draft-ietf-lake-authz-01.html#appendix-B)), but following the map-based serialization for network identifiers defined in [issue 23](https://github.com/lake-wg/authz/issues/23).\r\n- `additional-recovery-info` -- just like in [issue 24](https://github.com/lake-wg/authz/issues/24), I am merely renaming the open-ended field `opaque_info` to something more intentional.",
      "createdAt": "2024-03-19T10:01:13Z",
      "updatedAt": "2025-05-26T08:33:51Z",
      "closedAt": "2025-05-26T08:33:50Z",
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Just came back to this, and I think we can close this as is and leave the details for the application.\n\nNote that we currently already have in the text: `It may contain, for example, a list of suggested Vs through which U should join instead.`.",
          "createdAt": "2025-05-26T08:33:50Z",
          "updatedAt": "2025-05-26T08:33:50Z"
        }
      ]
    },
    {
      "number": 26,
      "id": "I_kwDOKiCa6c6DK9Z5",
      "title": "Usecase: Identity protection service",
      "url": "https://github.com/lake-wg/authz/issues/26",
      "state": "OPEN",
      "author": "chrysn",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I'm not fully sure where this should go, but authz is probably a good starting point, because it is part of the solution I have in mind right now.\n\nConsider two parties establishing a connection where both have sensitive identities (in terms of being tracked, of ownership, and both actively solicit connections continuously).\nAs an example, a service worker's phone might be constantly listening for beacons of installed equipment, which would report their latest logs, but neither do we want to allow tracking of the worker by identity or affiliation, nor do we want that arbitrary people driving through the city can map where they have equipment installed.\n(I figure airtags probably do something similar, but it's easier when reporting your manufacturer just is 2-3 bits of information).\n\nOne way to solve this is to defer to a third party that is trusted with exactly one task: They can, when actively attacking (or just being used) read your identifying information, and promise to only relay that to other parties in your organization. The organization may run that on their own (in which case they'd probably pick LOC_W=\"\" and take the risk of just seeing many decryption failures whenever they encounter devices of someone else who does the same), or they may use any global provider, where the number of providers should be smaller than the number of organizations using them in any area (maybe 5=len(\"GAMAM\")...).\n\nUsing authz, this could be used like this:\n(U = machine, V = phone, W = trustservice; as part of their enrollment, U has learned the public key of W and W knows the mapping from ID_U to CRED_U plus which account this is on, V has a secure channel with W associated with a customer account)\n* U sends message 1 with its ID_U\n* V sends the ENC_U_INFO to W\n* W verifies that V is on the same customer account as U, and returns CRED_U as well as a voucher response.\n  I'm not sure we even need to use the voucher here -- all that V needed to know that this is \"one of its own\", and knowing this it can now send its CRED_V (probably by value), and that will suffice to U\n* V sends its CRED_U\n* U recognizes the CRED_U and ... either sends a KID ID_CRED_V which suffices for this V, or if it turns out that V didn't contact W and just was generous with its CRED_V, maybe V sent something to ask for the full certificate.\n\nIs that in scope as an application for authz? I think it'd work with authz as-is, and at most need some wording that \"it is fine if the voucher response comes back OK without containing a voucher, V should then just continue like that\". (Maybe the voucher is also just empty, and in the last step U takes that as the hint that even though V sent a credential, itself it can just send ID_CRED_I=b\"\").",
      "createdAt": "2024-03-21T16:53:08Z",
      "updatedAt": "2025-06-30T14:17:27Z",
      "closedAt": null,
      "comments": [
        {
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> One way to solve this is to defer to a third party that is trusted with exactly one task: They can, when actively attacking (or just being used) read your identifying information, and promise to only relay that to other parties in your organization. The organization may run that on their own (in which case they'd probably pick LOC_W=\"\" and take the risk of just seeing many decryption failures whenever they encounter devices of someone else who does the same), or they may use any global provider, where the number of providers should be smaller than the number of organizations using them in any area (maybe 4=len(\"GAMA\")...).\r\n\r\nI'm having difficulties understanding this paragraph.\r\nI think that LOC_W=\"\" means that V has to know the real value?\r\n",
          "createdAt": "2024-03-22T00:52:35Z",
          "updatedAt": "2024-03-22T00:52:35Z"
        },
        {
          "author": "chrysn",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes, LOC_W with some value could mean \"You know whom to ask\".\r\n\r\nThe point of the 3rd party is to enlarge the number of devices which one's device is indistinguishable from. Something is already gained from running such a service on your own (then devices are not trackable individually but any active attacker will see the domain part of their identity), a \"you know whom to ask\" works better at the cost of trial-and-error, and the moral equivalent of \"check with cloudflare first\" works more precisely and still just gives 2-3 bits of information (depending on whether there are 4 or 8 common providers).",
          "createdAt": "2024-03-22T03:44:08Z",
          "updatedAt": "2024-03-22T03:44:08Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> One way to solve this ...\r\n\r\nI also find it hard to understand this paragraph. It appears the main change is that W has a business logic commitment to not share ids with _other organizations_ which could act as unintended trackers? If yes, I fail to see how to integrate it in the protocol.\r\n\r\n> defer to a third party that is trusted with exactly one task: They can, when actively attacking (or just being used) read your identifying information\r\n\r\nWho is attacking here? The trusted party? (that doesn't make sense to me)\r\nWho can read the information?\r\n\r\n> I'm not sure we even need to use the voucher here -- all that V needed to know that this is \"one of its own\"\r\n\r\nI don't understand this part, as V already does not use the voucher ([Section 4.6.2.2](https://www.ietf.org/archive/id/draft-ietf-lake-authz-01.html#section-4.6.2.2)) -- the voucher's intended audience is U. \r\nV simply knows that the authorization has worked by receiving an \"ok\" answer from W (we need to actually define this, as tracked in #19).",
          "createdAt": "2024-03-25T13:35:43Z",
          "updatedAt": "2024-03-25T13:36:00Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@chrysn any comments on this? if you want we can discuss during the next IETF meeting.",
          "createdAt": "2024-10-18T13:05:33Z",
          "updatedAt": "2024-10-18T13:05:33Z"
        },
        {
          "author": "chrysn",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Sorry, I missed a few notifications here.\n\nApart from answering open questions (see next post), my question (or request to support) is that as far as ELA is concerned, *sening* a voucher should be optional (like, typically present, but allow that applications building on it do not need to convey any information from W to U).",
          "createdAt": "2025-05-23T16:28:50Z",
          "updatedAt": "2025-05-23T16:28:50Z"
        },
        {
          "author": "chrysn",
          "authorAssociation": "CONTRIBUTOR",
          "body": ">  has a business logic commitment to not share ids with other organizations which could act as unintended trackers? If yes, I fail to see how to integrate it in the protocol.\n\nNo need to integrate that into the protocol, that is just policy.\n\n> >  defer to a third party that is trusted with exactly one task: They can, when actively attacking (or just being used) read your identifying information\n> Who is attacking here?\n\nLet me rephrase: W is a trusted third party, but we do not have *much* trust in them. (About as much as you can trust any global organization that may be subject to any country's legislation). So *if* that third party were compromised in any way, all they can do is\n\n* deny service to their users\n* perform their duties as intended but monitor which parties V apparently saw which parties U (kind of necessary because that's what they're used to do, it's just that they should tell the *V*) or relay that information\n* \"wardrive\", going around and correlate messages 1 with physical locations (and thus devices); unlike any untrusted party they can not only see *that* there is a party U around, but which user (eg. company) it belongs to\n\n> I don't understand this part, as V already does not use the voucher ([Section 4.6.2.2](https://www.ietf.org/archive/id/draft-ietf-lake-authz-01.html#section-4.6.2.2)) -- the voucher's intended audience is U.\nV simply knows that the authorization has worked by receiving an \"ok\" answer from W (we need to actually define this, as tracked in https://github.com/lake-wg/authz/issues/19).\n\nThe point here is that there can be cases where W's statement towards V is not \"That peer is OK, here is a voucher to send on\", but it is \"That peer is OK, *and no need to send any voucher*\" (because U is already equipped to process V's ID_CRED_V -- it's just that V is holding back on sending ID_CRED_V until W said that U is authorized to receive ID_CRED_V). This is not an error case, it's more a case of \"yes that's null and that's fine, no need to send it\".\n\nI'm not so much worried about the V-W leg here -- IIUC, neither the cryptographic parts nor the U-V leg rely on that precise REST interface. But that U-V can go on after U sent an ELA EAD even if there is no response ELA EAD (because W knows the concrete application and can confidently know that there is nothing for U to process further) is something that the original EAD item description should enable.\n\n---\n\nSo as I said, I hope this could be allowed in the document.\n\nSpeaking of allowing things: Anything wrong with having multiple voucher requests in the EAD1?",
          "createdAt": "2025-05-23T16:54:46Z",
          "updatedAt": "2025-05-23T16:54:46Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks for the clarifications. Some comments:\n\n1. if the Voucher is there, and gets processed normally, is it doing any harm? is it preventing this use case to be implemented?\n2. `Anything wrong with having multiple voucher requests?` I don't know what is the use case for that, but one technically could put more EAD_1 items in the EAD_1 field, and each could have a different LOC_W/ENC_U_INFO.",
          "createdAt": "2025-05-26T12:00:16Z",
          "updatedAt": "2025-05-26T12:00:16Z"
        },
        {
          "author": "chrysn",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> if the Voucher is there, and gets processed normally, is it doing any harm?\n\nNo strong harm, it's just two extra bytes that are sent without technical need, and describing an application of it would be \"Please ignore that EAD option (or maybe raise an error if there's more than 0 bytes in it), it's really just there because the base spec expects something to be in there and we can't leave it out\", and that'd seem a bit ugly.\n\n> more than one EAD_1 items\n\nI wasn't sure if it's ruled out; if it isn't ruled out, that's fine.\n\nUse case is mainly for reliability -- eg. in the enrollment case, a vendor picks MASAs because they are more longlived, but everything has a chance of crashing, and if a device were to sit with two MASAs, there's twice (yes mathematicians around please don't fry me!) the chance one gets hacked, but also twice (yes that's a different twice actually) the chance one survives the next tech bubble burst. (Or, in the identity protection case: I don't want my information flow to stand still just b/c that service decided it can't do business with me any more).",
          "createdAt": "2025-05-26T12:12:17Z",
          "updatedAt": "2025-05-26T12:12:17Z"
        },
        {
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> One way to solve this is to defer to a third party that is trusted with exactly one task: They can, when actively attacking (or just being used) read your identifying information, and promise to only relay that to other parties in your organization. The organization may run that on their own (in which case they'd probably pick LOC_W=\"\" and take the risk of just seeing many decryption failures whenever they encounter devices of someone else who does the same), or they may use any global provider, where the number of providers should be smaller than the number of organizations using them in any area (maybe 5=len(\"GAMAM\")...).\n\nIt seems that this is a useful service/thiing, which ELA would be one specific user of.\nDULT is indeed dealing with this problem, and it's a hard nut to crack in a general way.\nI think that the things DULT will do will not be generally applicable, however.\n",
          "createdAt": "2025-05-26T14:50:57Z",
          "updatedAt": "2025-05-26T14:50:57Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "So, ELA is about authorization. We defined it as being applicable for Enrollment. After reading the proposal in this issue, I think it can be extended and used for such an identity protection service, which is a good thing.\nThat said, I don't see a strong point in making the Voucher optional in order to better support the use case of ELA for identity protection. \nNote that by making the Voucher optional, then it needs to be implemented and handled across implementations that must interoperate. Also note that we want simplicity, especially in the U side, so that the implementation is as lean as possible. ",
          "createdAt": "2025-06-30T14:17:27Z",
          "updatedAt": "2025-06-30T14:17:27Z"
        }
      ]
    },
    {
      "number": 27,
      "id": "I_kwDOKiCa6c6EXuCP",
      "title": "Privacy of hints",
      "url": "https://github.com/lake-wg/authz/issues/27",
      "state": "CLOSED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "During the IETF 119 LAKE meeting (see [minutes here](https://datatracker.ietf.org/doc/minutes-119-lake-202403210530/)), some comments were raised about the privacy aspects of hints (identifiers of V passed from U to W and vice-versa).\r\nThis issue is intended as a place for discussion of the raised points.\r\n\r\nCurrently in version -01 of the draft, there are two kinds of hints:\r\n1. `u_hints`, meaning radio identifiers of Vs that are discovered by U and communicated to W via an encrypted channel (carried within EAD_1 and then VREQ).\r\n2. `v_hints`, meaning radio identifiers of Vs that are pre-populated in W and are communicated to U via an encrypted channel (carried within VRES and then EDHOC error Access Denied).\r\n\r\nBelow I explore whether or not there are privacy issues regarding hints, from the perspectives of U, V and W, as well as when data is in transit.\r\n\r\n### 1. Privacy of `u_hints`\r\n- At U: gateways (Vs) normally advertise their radio identifiers in beacons -> no issue.\r\n- At V: the hint is encrypted -> no issue.\r\n- At W: the radio identifiers of any V will be read by W\r\n  - \u26a0\ufe0f potential issue: if W shares the identifiers with 3rd parties\r\n  - mitigation: W should commit to not share the received identifiers.\r\n- in transit between U <-> V and V <-> W: the hint is encrypted -> no issue.\r\n\r\n### 2. Privacy of `v_hints`\r\n- At W: the radio identifiers of Vs that are securely associated with W will be read by W\r\n  - \u26a0\ufe0f potential issue: if W shares the identifiers with 3rd parties\r\n  - mitigation: W should commit to not share the received identifiers.\r\n  - \u2753note: since Vs are already associated with W, the Vs should already trust W to not share any information with 3rd parties. Thus I think this is a non-issue.\r\n- At V: the hint is encrypted -> no issue.\r\n- At U: the device U will gain information about Vs that allow U to enroll. \r\n  - \u26a0\ufe0f potential issue: if the device is malicious, it would be learning new information about the system\r\n  - mitigation: only return hints when U is known to W.\r\n    - example 1: device u1 is listed in W's ACL, but the V through which it tried to join is not in the ACL (leading to error \"Access Denied\"). Since W knows u1, it MAY return `v_hints`.\r\n    - example 2: device u2 is not listed in W's ACL (leading to error \"Access Denied\"). Since W does not know u2, it MUST NOT return `v_hints`.\r\n  - \u2753 note: is there an issue when U is known by W (as in example 1 above)? It would be learning about radio identifiers of Vs that might or might not be in its radio range and are expected to be authorized to enroll U. Personally I think this is a non-issue.\r\n- in transit between W <-> V and V <-> U: the hint is encrypted -> no issue.\r\n\r\n### Discussion\r\nI think that the only issues that we need to address in the document are `1. Privacy of u_hints at W` and `2. Privacy of v_hints at U (when U is unknown to W)`.\r\n\r\nLooking forward to receiving comments from those interested in this topic.",
      "createdAt": "2024-04-02T15:22:57Z",
      "updatedAt": "2025-03-18T07:53:07Z",
      "closedAt": "2025-03-18T07:53:06Z",
      "comments": [
        {
          "author": "sftcd",
          "authorAssociation": "NONE",
          "body": "\r\nHi Geovane,\r\n\r\nOn 02/04/2024 16:23, Geovane Fedrecheski wrote:\r\n> During the IETF 119 LAKE meeting (see [minutes here](https://datatracker.ietf.org/doc/minutes-119-lake-202403210530/)), some comments were raised about the privacy aspects of hints (identifiers of V passed from U to W and vice-versa).\r\n\r\nSo one thing that'd help me a lot in understanding your analysis\r\nwould be a concrete example that describes a possibly \"bad\"\r\nprivacy situation. That'd not be text that'd need to be in the\r\ndraft, but I think it'd help the discussion along, both here\r\nand maybe later on the list.\r\n\r\nSo... what's the worst privacy case we can think of here?\r\n\r\nTa,\r\nS.\r\n",
          "createdAt": "2024-04-03T10:20:26Z",
          "updatedAt": "2024-04-03T10:20:26Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Great question.\r\n\r\n### 1. Privacy of u_hints at W\r\nLet's say that W receives MAC addresses of some Vs, and shares them with third parties. This is harmless in my opinion, as MAC addresses are freely broadcasted in beacons, and do not identify a customer.\r\n\r\nNow, would W share ID_U along with the list of MAC addresses, then it might be used to determine the approximate location of U, e.g. using services like https://developers.google.com/maps/documentation/geolocation/overview.\r\n\r\nSince U assumes W to be trusted (e.g. W is the manufacturer), neither of the above should happen.\r\n\r\n### 2. Privacy of v_hints at U (when U is unknown to W)\r\nLet's say that u1 is a malicious U that has no real business relationship with W.\r\nu1 somehow obtained G_W and LOC_W, but u1 is not known by W: it is not present in the ACL, nor in any database entry.\r\n\r\nNow, u1 prepares and sends a well formed Voucher Request, which W receives and processes normally.\r\nSince u1 is not in W's ACL, W would issue an \"Access Denied\" error, possibly with hints (MAC addresses of Vs). \r\nHowever, since u1 is not in the ACL in the first place, it is impossible to construct a hint that is tailored for u1.\r\nSo, if no hint is added, there is no issue.\r\n\r\nA worst case than this could be W picking random MAC addresses of associated Vs as hints to send to u1 (although this does not make much sense in my opinion). In this case, u1 could keep re-sending Voucher Requests and learning more and more Vs. Eventually, u1 would learn all Vs that are linked to a W. This would expose a business relationship, which could be sensitive. Again, I cannot think of a scenario where picking random Vs to serve as hints could make sense.\r\n\r\n",
          "createdAt": "2024-04-03T13:01:04Z",
          "updatedAt": "2024-04-03T13:01:04Z"
        },
        {
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Geovane Fedrecheski ***@***.***> wrote:\n    > ### 2. Privacy of v_hints at U (when U is unknown to W) Let's say that\n    > u1 is a malicious U that has no real business relationship with W.  u1\n    > somehow obtained G_W and LOC_W, but u1 is not known by W: it is not\n    > present in the ACL, nor in any database entry.\n\n    > Now, u1 prepares and sends a well formed Voucher Request, which W\n    > receives and processes normally.  Since u1 is not in W's ACL, W would\n    > issue an \"Access Denied\" error, possibly with hints (MAC addresses of\n    > Vs).  However, since u1 is not in the ACL in the first place, it is\n    > impossible to construct a hint that is tailored for u1.  So, if no hint\n    > is added, there is no issue.\n\nI agree W should never provide hints in the case that u1 was not\nmanufactured by W.\n\n    > A worst case than this could be W picking random MAC addresses of\n    > associated Vs as hints to send to u1 (although this does not make much\n    > sense in my opinion). In this case, u1 could keep re-sending Voucher\n    > Requests and learning more and more Vs. Eventually, u1 would learn all\n    > Vs that are linked to a W. This would expose a business relationship,\n    > which could be sensitive. Again, I cannot think of a scenario where\n    > picking random Vs to serve as hints could make sense.\n\nIs this a u1 with a colluding W, who is now trying to learn the list of Vs?\nSuch a W wouldn't be in V's trusted list of manufacturers, right?\n\n\n",
          "createdAt": "2024-04-03T13:25:54Z",
          "updatedAt": "2024-04-03T13:25:54Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Is this a u1 with a colluding W, who is now trying to learn the list of Vs?\r\n\r\nNo, I was thinking of a W that simply has a naive implementation of the hint-picking algorithm.\r\n\r\n> Such a (colluding) W wouldn't be in V's trusted list of manufacturers, right?\r\n\r\nCorrect, therefore the collusion with an untrusted W should not be possible.",
          "createdAt": "2024-04-03T13:41:11Z",
          "updatedAt": "2024-04-03T13:41:11Z"
        },
        {
          "author": "sftcd",
          "authorAssociation": "NONE",
          "body": "\r\nHiya,\r\n\r\nOn 03/04/2024 14:01, Geovane Fedrecheski wrote:\r\n> Great question.\r\n> \r\n> ### 1. Privacy of u_hints at W\r\n> Let's say that W receives MAC addresses of some Vs, and shares them with third parties. This is harmless in my opinion, as MAC addresses are freely broadcasted in beacons, and do not identify a customer.\r\n\r\nI was more after a scenario describing some specific type\r\nof device - it may seem much less threatening to consider\r\nissues for \"U\" than to consider issues for e.g. a health\r\nmonitor or some other device carried by a human.\r\n\r\nIn such cases, GPS co-ords or the list of MACs seen for\r\nV's leaks location information to W which seems undesirable\r\nin general. (Esp. as the protocol uses opaque fields for\r\ncarrying that, and could therefore be abused by device\r\nmanufs.)\r\n\r\nConsider also security issues (as opposed to privacy\r\nissues) in cases where the device is carried by a person\r\nin some security-sensitive location (e.g. a military\r\ninstallation or prison) - it seems pretty squirmy to me\r\nto even provide location information to the device manuf\r\nin such cases.\r\n\r\nI'd generally wonder if the risks are worth the possible\r\nefficiency benefits.\r\n\r\nCheers,\r\nS.\r\n",
          "createdAt": "2024-04-03T14:18:00Z",
          "updatedAt": "2024-04-03T14:18:00Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Hi @sftcd,\r\n\r\nAt this point, considering we proceed with #29, we would be backing off from sending opaque data in lieu of sending only network identifiers. Also, as a result of the present discussion, I think we can entirely discard the idea of sending GPS coordinates.\r\n\r\nAnother consideration is that just by having U trying to enroll via V, this already leaks some location information to W. For example, in Bluetooth or IEEE 802.15.4 or Wi-Fi one can easily expect a geolocation accuracy of a few tens of meters, given the MAC address of just one gateway. Of course triangulation of more gateways can improve that, but I would say e.g. 50 meters is already quite sensitive.\r\n\r\nNext, IIUC, your concerns regard only hints from U to W. Do you have concerns with the other way around? (where the manufacturer sends identifiers of gateways to a known device).\r\n\r\nI am taking a look at what the performance improvements could look like, might come back later with data.",
          "createdAt": "2024-04-04T09:39:38Z",
          "updatedAt": "2024-04-04T09:39:38Z"
        },
        {
          "author": "sftcd",
          "authorAssociation": "NONE",
          "body": "TBH, I don't understand why MAC addresses are even involved here - doesn't W only need to know CRED_V? Re-using possibly long term static identifiers like MAC addresses in this way would seem like an anti-pattern to me.\r\n\r\nAnd yes, my primary concern is leaking information about U (e.g. location) to W. But I've not analysed whether there are downsides to W \"sharing\" information with U - I guess there may be issues there that could enable a bad-actor U to more easily probe networks, but as I say, I've not analysed that. (I think mcr's comments above do though.)",
          "createdAt": "2024-04-04T11:00:43Z",
          "updatedAt": "2024-04-04T11:00:43Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> why MAC addresses are even involved here (...) doesn't W only need to know CRED_V?\r\n\r\nThe gist here is: we are considering an optimization to accelerate enrollment time when there are several potential networks (Vs), and to have it working would require some sharing of network identifiers.\r\n\r\n> Re-using possibly long term static identifiers like MAC addresses\r\n\r\nThe identifiers do not need to be long term, but then V would need to publish them at W periodically, which in turn requires additional coordination.\r\n\r\n---\r\n\r\nContinuing from my previous message, I did some simulations so we can discuss numbers. \r\n\r\nWe would be looking at faster join times of around 2x to 3x, when the number of available Vs is 10, with variations depending on the types of radio used. Specifically:\r\n- considering 10 available Vs and 5 hint items per message\r\n  - 3x faster join time, considering a 250 Kbps network with a scheduling timeslot of 10 ms (typical TSCH configuration)\r\n  - 2x faster join time, considering a 1 Mbps network with no scheduling cost (typical in Bluetooth)\r\n\r\nHints are more effective the more Vs there are available (e.g. may lead to a 10x improvement under certain conditions, provided there are > 25 available Vs). If available Vs = 5, there is no difference. If it is smaller than 5, using hints causes it to be slower.\r\n\r\nSo, it is a considerable improvement, although likely not a 10x factor in the average case.\r\n\r\n---\r\n\r\nAt this point not sure about next steps. Would be interested in hearing what others think on this topic (@gselander @mcr @malishav @chrysn).",
          "createdAt": "2024-04-04T16:26:46Z",
          "updatedAt": "2024-04-04T16:26:46Z"
        },
        {
          "author": "sftcd",
          "authorAssociation": "NONE",
          "body": "\r\n\r\nOn 04/04/2024 17:27, Geovane Fedrecheski wrote:\r\n\r\n>> Re-using possibly long term static identifiers like MAC addresses\r\n> \r\n> The identifiers do not need to be long term, but then V would need to\r\n> publish them at W periodically, which in turn requires additional\r\n> coordination.\r\n\r\nIf that's possible, then oughtn't it be possible to use some\r\nother short-lived identifier that isn't a MAC address?\r\n\r\n> At this point not sure about next steps.\r\n\r\nI'd say summarise to the WG list is a good next step.\r\n\r\nCheers,\r\nS.\r\n\r\n",
          "createdAt": "2024-04-04T17:35:07Z",
          "updatedAt": "2024-04-04T17:35:07Z"
        },
        {
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Geovane Fedrecheski ***@***.***> wrote:\n    > The gist here is: we are considering an optimization to accelerate\n    > enrollment time when there are several potential networks (Vs), and to\n\nI think that we could add this later.\nRight now, I think it's premature optimization.\n\n\n",
          "createdAt": "2024-04-04T18:38:28Z",
          "updatedAt": "2024-04-04T18:38:28Z"
        },
        {
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "body": "About U providing information about MAC addresses to W: \r\n\r\nHere is an product using hashes of MAC addresses:\r\nhttps://www.footfallcam.com/people-counting/knowledge-base/chapter-19-general-data-protection-regulation-gdpr/\r\n\r\nWe could even do better. Instead of sending a list of MAC addresses, U sends a list of H(G_X, MAC-address) in u_hint (encrypted for W), where\r\n\r\n - H() is a truncated hash of size, say, 4 bytes (TBD)\r\n - G_X is working as a nonce, so the same MAC address detected by different Us or for different sessions with the same U would render independent values\r\n\r\nThe lists are matched by W against the corresponding values calculated with the MAC addresses of relevant Vs which are known to W by the setup of the system. Thus V learns which Vs are heard by U, and then deletes the list of hashes. \r\n\r\nIf U is a legitimate device etc. W returns information about preferred Vs' MAC addresses in v_hint (encrypted for U). (This could also be truncated hashes for compactness. Alternatively, U could enumerate the detected MAC addresses and W just sends back a list of integers, but that requires U to cache the MAC addresses ... which somehow works against the privacy ambition.)\r\n\r\nWould this be sufficient to address this privacy aspect? ",
          "createdAt": "2024-04-05T09:59:35Z",
          "updatedAt": "2024-04-05T09:59:35Z"
        },
        {
          "author": "sftcd",
          "authorAssociation": "NONE",
          "body": "\r\n> Would this be sufficient to address this privacy aspect?\r\n\r\nIf W ends up knowing which set of V's are close to U, then isn't it game over from the privacy perspective regardless of how W learns that?\r\n",
          "createdAt": "2024-04-05T11:51:31Z",
          "updatedAt": "2024-04-05T11:51:31Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> If W ends up knowing which set of V's are close to U\r\n\r\nIn certain use cases, such as [Example 2](https://www.ietf.org/archive/id/draft-ietf-lake-authz-01.html#name-wrong-gateway) in the draft, we consider that the authorization policies may contain mappings from U to V's:\r\n\r\n```\r\nthe access policy in W specifies, via a mapping of shape (ID_U; MAC1, MAC2, ...) that device u1 \r\ncan only join via gateway v3, i.e., the mapping is: (14; 39-63-C9-D0-5C-62)\r\n```\r\n\r\nIn this case, W already has the full graph connecting U's and V's -- it has to have it, to enforce some business logic.\r\n\r\nIt is worth emphasizing that the hints would only be used in this kind of scenario, where W already has a mapping of U and V's. Since hints are optional, other scenarios that have less coupled architectures (with U's being able to join via any V's), would still be supported by the protocol, and would not need or use hints.\r\n\r\n(note: the example is using MAC addresses, but it could be any identifier of V, such as ID_CRED_V)",
          "createdAt": "2024-04-08T08:27:59Z",
          "updatedAt": "2024-04-08T08:27:59Z"
        },
        {
          "author": "sftcd",
          "authorAssociation": "NONE",
          "body": "\r\n\r\nOn 08/04/2024 09:28, Geovane Fedrecheski wrote:\r\n> In certain use cases, such as [Example 2](https://www.ietf.org/archive/id/draft-ietf-lake-authz-01.html#name-wrong-gateway) in the draft, we consider that the authorization policies may contain mappings from U to V's:\r\n> \r\n> ```\r\n> the access policy in W specifies, via a mapping of shape (ID_U; MAC1, MAC2, ...) that device u1\r\n> can only join via gateway v3, i.e., the mapping is: (14; 39-63-C9-D0-5C-62)\r\n> ```\r\n> \r\n> In this case, W already has the full graph connecting U's and V's -- it has to have it, to enforce some business logic.\r\n\r\nFor me, the above is too abstract to enable analysis of privacy\r\nissues, or business logic.\r\n\r\nCheers,\r\nS.\r\n",
          "createdAt": "2024-04-08T08:50:31Z",
          "updatedAt": "2024-04-08T08:50:31Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Merging of #42 fixes most issues raised in this thread. Still up for discussion if we should keep the opaque_info field in the Access Denied error message. (to be discussed during the IETF 121 in Dublin)",
          "createdAt": "2024-10-18T13:02:31Z",
          "updatedAt": "2024-10-18T13:02:31Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Hints are gone from the document, thus closing this issue.",
          "createdAt": "2025-03-18T07:53:06Z",
          "updatedAt": "2025-03-18T07:53:06Z"
        }
      ]
    },
    {
      "number": 35,
      "id": "I_kwDOKiCa6c6Gpl6e",
      "title": "Media type templates must stand on their own",
      "url": "https://github.com/lake-wg/authz/issues/35",
      "state": "CLOSED",
      "author": "cabo",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "In the IANA registry, there will not be a link that could be used in \"See \"Authors' Addresses\" section\".\r\nPlease do fill in those fields.",
      "createdAt": "2024-04-23T14:32:51Z",
      "updatedAt": "2024-07-05T15:46:02Z",
      "closedAt": "2024-07-05T15:46:02Z",
      "comments": []
    },
    {
      "number": 46,
      "id": "I_kwDOKiCa6c6sEAfe",
      "title": "Clarify use of pre-agreed cipher suites",
      "url": "https://github.com/lake-wg/authz/issues/46",
      "state": "CLOSED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Add a consideration about cipher suites, where V must be ready to use the same cipher suite used between U and W.\n\nSee https://github.com/lake-wg/authz/pull/45#discussion_r1975124784",
      "createdAt": "2025-02-28T10:04:22Z",
      "updatedAt": "2025-03-03T15:35:34Z",
      "closedAt": "2025-03-03T15:35:34Z",
      "comments": []
    },
    {
      "number": 51,
      "id": "I_kwDOKiCa6c6uO3CG",
      "title": "Address IANA review",
      "url": "https://github.com/lake-wg/authz/issues/51",
      "state": "CLOSED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Reproducing the email received:\n\n---\n\nBefore the IETF meeting, we check working group agendas for documents with IANA-related issues. Notes about this document:\n\nhttps://datatracker.ietf.org/doc/html/draft-ietf-lake-authz-04\n\n1) Section 7.1: Please specify the preferred value range (0-23 or 24-65535). See\n\nhttps://www.iana.org/assignments/edhoc\n\n2) Section 7.2: Please add the \u201cStatus\u201d field for the Well-Known URI.\n\n3) Section 7.3: Please add the \u201cDomain Name Reservation Considerations\u201d subsection required by RFC 6761 (see Section 5) for the lake-authz.arpa registration.\n\n4) Section 7.4: Please replace the IESG with the IETF in the media type\u2019s change controller field.\n\n5) Section 7.5: Please specify a preferred value range the CoAP Content-Format registration. See\n\nhttps://www.iana.org/assignments/core-parameters\n\nIf you have any questions, just let us know. If you'd like to talk in person, you can find us next to the RFC Editor's table from Monday through Thursday. You can also request another review at any time by contacting us at iana@iana.org.\n\nFor more information about IANA Considerations section requirements, please see\n\nhttps://www.iana.org/help/protocol-registration\n",
      "createdAt": "2025-03-16T15:21:44Z",
      "updatedAt": "2025-07-07T11:58:21Z",
      "closedAt": "2025-07-07T11:58:21Z",
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Regarding comment 3 (_Please add the \u201cDomain Name Reservation Considerations\u201d_):\n\n- We are asked to answer the 7 questions [listed here](https://www.rfc-editor.org/rfc/rfc6761.html#section-5). Before starting to do that, I want to ask: do we need this .arpa reservation? why? I understand the purpose of the .arpa domain name is not IP resolution, but DNS-based discovery. So maybe it is useful, but I want to consult the co-authors. I checked RFCs like EDHOC and BRSKI and they do not do this reservation. \n\ncc @gselander @malishav @mcr ",
          "createdAt": "2025-07-01T08:04:39Z",
          "updatedAt": "2025-07-01T08:04:39Z"
        },
        {
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Geovane Fedrecheski ***@***.***> wrote:\n    > - We are asked to answer the 7 questions [listed\n    > here](https://www.rfc-editor.org/rfc/rfc6761.html#section-5). Before\n    > starting to do that, I want to ask: do we need this .arpa reservation?\n    > why? I understand the purpose of the .arpa domain name is not IP\n    > resolution, but DNS-based discovery. So maybe it is useful, but I want\n    > to consult the co-authors. I checked RFCs like EDHOC and BRSKI and they\n    > do not do this reservation.\n\narpa is not DNS-based discovery.... It's infrastructure, including reverse\nnames.  draft-ietf-emu-eap-arpa-07 is another example.\n\nEDHOC is too generic to have to pick something for the CoAP Host option.\nEDHOC users, like us, need that.\nBRSKI uses /.well-known/brski, and because of join proxies, says to ignore\nthe Host: header. Clients put whatever they like, or nothing, which HTTP\npermits.\n\nRFC9031 is the best model.\nSection 8.1.1, for the Uri-Host.\nThe Uri-Host option is mandatory in CoAP, but because U reaches V likely\nthrough a join-proxy, it doesn't know the name, or even the IPv6 address of\nV.\n\n--\n]               Never tell me the odds!                 | ipv6 mesh networks [\n]   Michael Richardson, Sandelman Software Works        |    IoT architect   [\n]     ***@***.***  http://www.sandelman.ca/        |   ruby on rails    [\n\n\n\n",
          "createdAt": "2025-07-03T23:19:20Z",
          "updatedAt": "2025-07-03T23:19:20Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@mcr thanks. I just sent PR #63 in response.",
          "createdAt": "2025-07-04T14:28:27Z",
          "updatedAt": "2025-07-04T14:28:27Z"
        }
      ]
    },
    {
      "number": 52,
      "id": "I_kwDOKiCa6c6uO3OX",
      "title": "Define EAD label values to replace TBD1, TBD2",
      "url": "https://github.com/lake-wg/authz/issues/52",
      "state": "CLOSED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-03-16T15:23:06Z",
      "updatedAt": "2025-07-01T08:35:31Z",
      "closedAt": "2025-07-01T08:35:31Z",
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Closing as obsolete, IANA will do the assignments.",
          "createdAt": "2025-07-01T08:35:31Z",
          "updatedAt": "2025-07-01T08:35:31Z"
        }
      ]
    },
    {
      "number": 53,
      "id": "I_kwDOKiCa6c682TTs",
      "title": "Allow keys V=W",
      "url": "https://github.com/lake-wg/authz/issues/53",
      "state": "OPEN",
      "author": "chrysn",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "(This issue is a replication of https://mailarchive.ietf.org/arch/msg/lake/ho1AMXUOEQEuEvoxDu_nfOINZpI considering input from there and )\n\nThe current draft (tacitly, unless I missed it) assumes that the keys V and W (i.e., the private keys of the domain authenticator and the private key of the enrollment server) are distinct.\n\nThis is a sensible assumption to make under the premise of the pledge-domain-enrollment role distribution, but as discussed around IETF121, I'd hope that the protocol describes the data sent and the requirements, whereas pledge-domain-enrollment is one application but the components can be reused. (This is particularly important because the seccons of 9528 say that \"Any new uses of EAD should be subject to careful review.\" \u2013 defining new EAD items is dangerous if their mechanism reaches into the EDHOC secrets as this spec does, so let's get the 3-party dance right here for all users of the same cryptographic tricks).\n\nIn other applications, parties V and W may be held by the same host, and using the same key there could be operationally beneficial.\n\nPlease clarify in the document whether there is any cryptographic danger of using identical keys V and W.\n\nMy impression is that there is no danger as long as (and then this document can make this a requirement) the info values for the G_X W = G_W X exporter are distinct from those of the G_X V = G_V W exporter defined in EDHOC.",
      "createdAt": "2025-06-23T14:10:10Z",
      "updatedAt": "2025-06-30T13:08:03Z",
      "closedAt": null,
      "comments": [
        {
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I don't quite understand V==W.     I don't see the use case.    If V==W, then that supposes that the Registrar was involved\nI have no objection to it, conceptually.  It's just a degenerate situation.    \nFor the Registrar to have the W private key, (distinct from V), could result from the manufacturer going out of business, and then providing the W private key under escrow to the customer.  That probably shouldn't be done for more than one customer, but it could be better than alternatives.\nI agree that we should make sure that any derived keys are unique, and I imagine that this could be done by making sure we are using an appropriate PRF to derive keys. I haven't looked into that myself; trusting Goran eats and sleeps that kind of stuff.\n",
          "createdAt": "2025-06-24T19:24:58Z",
          "updatedAt": "2025-06-24T19:24:58Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "As far as I remember, in IETF 121 we agreed that ELA should describe an Authorization protocol on top of EDHOC, with Enrollment being a particular use case. On top of that, we also discussed how the reverse flow would fit there. Currently, the draft does incorporate changes resulting from both discussions. \n\nRegarding co-locating V and W, the current state is, you can just run both as different services in a single machine. One benefit of that is that you can just reuse any existing implementation of ELA and it will just work. \nIf V and W *are* the same, then I assume you need a particular implementation which supports coupling both modules. \n\n> using the same key there could be operationally beneficial\n\nI don't see a significant operational benefit in managing one key pair vs. managing two key pairs, especially given that this is an optional (as in \"it also could work like this\") mode. I think having a single key pair for the use case of V == W could be more elegant, but I don't see it bringing a significant operational benefit. ",
          "createdAt": "2025-06-30T13:08:03Z",
          "updatedAt": "2025-06-30T13:08:03Z"
        }
      ]
    },
    {
      "number": 57,
      "id": "I_kwDOKiCa6c6-ct-V",
      "title": "Editor's note: Consider to include an example of serialized internal state.",
      "url": "https://github.com/lake-wg/authz/issues/57",
      "state": "CLOSED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "See https://www.ietf.org/archive/id/draft-ietf-lake-authz-04.html#section-4.3 ",
      "createdAt": "2025-07-02T09:14:34Z",
      "updatedAt": "2025-07-07T12:52:46Z",
      "closedAt": "2025-07-07T12:52:46Z",
      "comments": []
    },
    {
      "number": 58,
      "id": "I_kwDOKiCa6c6-cuMb",
      "title": "Editor's note: Add more context to external_aad.",
      "url": "https://github.com/lake-wg/authz/issues/58",
      "state": "CLOSED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "See https://www.ietf.org/archive/id/draft-ietf-lake-authz-04.html#section-4.4.1",
      "createdAt": "2025-07-02T09:14:53Z",
      "updatedAt": "2025-07-07T11:29:00Z",
      "closedAt": "2025-07-07T11:29:00Z",
      "comments": []
    },
    {
      "number": 59,
      "id": "I_kwDOKiCa6c6-cvGp",
      "title": "Editor's note: interoperability of V supporting one or both flows",
      "url": "https://github.com/lake-wg/authz/issues/59",
      "state": "CLOSED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "See https://www.ietf.org/archive/id/draft-ietf-lake-authz-04.html#section-4.8.3",
      "createdAt": "2025-07-02T09:16:09Z",
      "updatedAt": "2025-07-07T11:21:07Z",
      "closedAt": "2025-07-07T11:21:07Z",
      "comments": []
    },
    {
      "number": 60,
      "id": "I_kwDOKiCa6c6-cvwe",
      "title": "Editor's note: TH_2 is internal EDHOC state",
      "url": "https://github.com/lake-wg/authz/issues/60",
      "state": "CLOSED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "See https://www.ietf.org/archive/id/draft-ietf-lake-authz-04.html#section-4.8.4\n\nI think we discussed that it is all public information anyway, and it is not a problem. To be double-checked, and if yes, remove that note.",
      "createdAt": "2025-07-02T09:17:04Z",
      "updatedAt": "2025-07-07T11:20:50Z",
      "closedAt": "2025-07-07T11:20:50Z",
      "comments": []
    },
    {
      "number": 61,
      "id": "I_kwDOKiCa6c6-cwFm",
      "title": "Editor's note: Clarify that performing TLS handshake is not necessary for each device request",
      "url": "https://github.com/lake-wg/authz/issues/61",
      "state": "CLOSED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "See https://www.ietf.org/archive/id/draft-ietf-lake-authz-04.html#section-5.1",
      "createdAt": "2025-07-02T09:17:32Z",
      "updatedAt": "2025-07-07T11:57:39Z",
      "closedAt": "2025-07-07T11:57:39Z",
      "comments": []
    },
    {
      "number": 62,
      "id": "I_kwDOKiCa6c6-cxAg",
      "title": "Editor's note: dropping message_1 actually conflicts with the EAD field being critical",
      "url": "https://github.com/lake-wg/authz/issues/62",
      "state": "CLOSED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "See https://www.ietf.org/archive/id/draft-ietf-lake-authz-04.html#appendix-A.1\n\nI am pretty sure we discussed that this is a non-issue when handled at the network layer (because broadcast messages should not have an ack anyway).",
      "createdAt": "2025-07-02T09:18:49Z",
      "updatedAt": "2025-07-07T11:30:53Z",
      "closedAt": "2025-07-07T11:30:53Z",
      "comments": []
    },
    {
      "number": 71,
      "id": "I_kwDOKiCa6c7BpQZ7",
      "title": "Support for EDHOC with PQ cipher suites",
      "url": "https://github.com/lake-wg/authz/issues/71",
      "state": "OPEN",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Tracking this here, according to email exchanges and discussions during IETF 123 Hackathon.\n\nTL;DR: changes needed to make ELA compatible with EDHOC's (upcoming) post-quantum cipher suites:\n- add an optional KEM ciphertext element to EAD_1 and EAD_2\n- G_W can either be a DH public key or a KEM encapsulation key\n\nInitial proposal with a bit more details:\n\n> As we have discussed, without any protocol change, EDHOC method 0 can be used with a post-quantum cipher suite, and it retains its security properties by replacing the content of the ephemeral DH key exchange with a KEM exchange (details in upcoming draft, see the figure in section \u201cKEM versus Diffie-Hellman\u201d in https://blog.cloudflare.com/nist-post-quantum-surprise/).\n> A heads up about applications of EDHOC using the ephemeral DH-keys for other Diffie-Hellman exchanges, like ELA where an ephemeral key is used with a static DH key of the third party W to derive a shared secret. In the above case this doesn\u2019t work anymore, so there needs to be another KEM exchange embedded in the EDHOC protocol. Fortunately this is also straightforward, since G_W can play the role of provisioned encapsulation key.\n> However, to support this case, the ELA protocol messages would need to add another element containing an optional KEM \u201cciphertext\u201d (add to both EAD_1 & EAD_2 to cover both forward and reverse flow). Needless to say the sizes of messages increases, but that already happens with the pq signatures.\n",
      "createdAt": "2025-07-21T14:07:27Z",
      "updatedAt": "2025-07-21T17:15:50Z",
      "closedAt": null,
      "comments": [
        {
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Another change is that:\n\n- G_Y can either be a ephemeral DH public key or a KEM ciphertext.\n\nBut that info should go into the pq-suites draft.\n\n",
          "createdAt": "2025-07-21T16:27:24Z",
          "updatedAt": "2025-07-21T16:27:24Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 4,
      "id": "PR_kwDOKiCa6c5hCE4Q",
      "title": "Implementation notes",
      "url": "https://github.com/lake-wg/authz/pull/4",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "There are 3 clarifications in separate commits. I am not totally sure if the consideration about credentials by value should be in the introduction, but I wanted them to be upfront in the document since it is a requirement to EDHOC implementations who wish to support this.",
      "createdAt": "2023-12-04T09:58:22Z",
      "updatedAt": "2024-02-02T08:24:25Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "048c37dcfb72a09c7c4e691611897123384e2838",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "implementation-notes",
      "headRefOid": "961df517ca51e98fd9efaa10abe05c58f0c613e9",
      "closedAt": "2024-02-02T08:24:22Z",
      "mergedAt": "2024-02-02T08:24:22Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "7406be0905efda10dd7996d7b7cc6e287f27bcdd"
      },
      "comments": [
        {
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Looks good, I made some editorial changes.\r\n\r\n(For some reason editor's copy won't update, don't understand why.) ",
          "createdAt": "2024-01-26T11:10:43Z",
          "updatedAt": "2024-01-26T11:10:43Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@gselander thank you. The problem was a missing reference declaration, and is now fixed.",
          "createdAt": "2024-01-29T08:02:17Z",
          "updatedAt": "2024-01-29T08:02:17Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 8,
      "id": "PR_kwDOKiCa6c5lEemS",
      "title": "Update links to new repository at lake-wg",
      "url": "https://github.com/lake-wg/authz/pull/8",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-01-25T14:07:33Z",
      "updatedAt": "2024-02-02T08:24:47Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "048c37dcfb72a09c7c4e691611897123384e2838",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "update-links-to-new-repo",
      "headRefOid": "2e774da3036612abee259e6e725b618fe4f12b39",
      "closedAt": "2024-02-02T08:24:44Z",
      "mergedAt": "2024-02-02T08:24:44Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "f2e543dcfd316af94893f13ffc2507822f43db17"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKiCa6c5t5rvh",
          "commit": {
            "abbreviatedOid": "2e774da"
          },
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-25T14:12:06Z",
          "updatedAt": "2024-01-25T14:12:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 9,
      "id": "PR_kwDOKiCa6c5lI2rP",
      "title": "Add error section",
      "url": "https://github.com/lake-wg/authz/pull/9",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Adding an error handling section. Work in progress.",
      "createdAt": "2024-01-26T08:45:49Z",
      "updatedAt": "2024-02-26T14:29:44Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "981e71af06900d26281ad51507708c9167f659d0",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "add-error-section",
      "headRefOid": "51513df38aae5375109898650f7a6e58597f67b2",
      "closedAt": "2024-02-26T14:29:42Z",
      "mergedAt": "2024-02-26T14:29:42Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "e678db91e8e64fb6a9290b8f6b554438b21b864f"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 10,
      "id": "PR_kwDOKiCa6c5lWPlr",
      "title": "Add Examples section (appendix)",
      "url": "https://github.com/lake-wg/authz/pull/10",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses #6.",
      "createdAt": "2024-01-29T16:36:41Z",
      "updatedAt": "2024-03-04T17:20:15Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "f4dc212f99e41b37be7aea286bf16b7381a3958b",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "add-examples-section",
      "headRefOid": "3fecd9ec90ba4324d6d37e76b55c2cc4e0bd4036",
      "closedAt": "2024-03-04T17:20:10Z",
      "mergedAt": "2024-03-04T17:20:09Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "c531dcdc9070063bf16dc5680b03678e234def9f"
      },
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Note that the second example (equivalent to UC4 in #6) does not include the `hint`, as it is not specified yet. It can be added back once that is done.",
          "createdAt": "2024-01-29T16:39:54Z",
          "updatedAt": "2024-01-29T16:39:54Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@gselander I added more details to the examples, do you want to take a look?",
          "createdAt": "2024-03-04T14:21:24Z",
          "updatedAt": "2024-03-04T14:21:24Z"
        },
        {
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Looks good, but I didn't understand this:\r\n\r\n> the access policy in W specifies, via a list of ID_U, that device u1 can enroll via any domain authenticator, i.e., the list is: \\[14\\]\r\n\r\nHow can I understand that the list has this format?",
          "createdAt": "2024-03-04T14:36:24Z",
          "updatedAt": "2024-03-04T14:36:24Z"
        },
        {
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Comparing with this in the second example. \r\n\r\n> {14, 39-63-C9-D0-5C-62}\r\n\r\nThe brackets are confusing, but is the absence of other entries (besides 14) in the previous example an indication that there is no restriction on what gateway?",
          "createdAt": "2024-03-04T14:38:55Z",
          "updatedAt": "2024-03-04T14:38:55Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> How can I understand that the list has this format?\r\n\r\nMy goal is just to provide an example of how the access policy could look like at W, while its exact format is out of scope (it is up to the authorization mechanism to define that).\r\n\r\nMaybe I could change it to `e.g., the access policy could look like this: [14]` (note the use of `e.g.` instead of `i.e.`) to make it clear that it is just an example.",
          "createdAt": "2024-03-04T14:53:30Z",
          "updatedAt": "2024-03-04T14:53:30Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> The brackets are confusing, but is the absence of other entries (besides 14) in the previous example an indication that there is no restriction on what gateway?\r\n\r\nYes, I intend for one example to have no restriction on the gateway, and another to have such restriction. The bracket notation is supposed to denote a mapping of ID_U and MAC Addresses, I can think of something else if that is not clear.",
          "createdAt": "2024-03-04T14:56:10Z",
          "updatedAt": "2024-03-04T14:56:10Z"
        },
        {
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Yes, I intend for one example to have no restriction on the gateway, and another to have such restriction. The bracket notation is supposed to denote a mapping of ID_U and MAC Addresses, I can think of something else if that is not clear.\r\n\r\nYes, please change from \"i.e.\" to \"e.g.\", the former gives the impression that there is something that should be understood based on something else. The examples are fine. It would be good with a common notation was used in both examples, and perhaps also the asymmetry between the first element and the following element(s), for example (14; MAC1, MAC2, ...)  and (14; ). Or (14; *).",
          "createdAt": "2024-03-04T15:19:36Z",
          "updatedAt": "2024-03-04T15:19:36Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I re-arranged the text so that there is no \"expectation\" on formats that are not defined. In doing so I decided to keep `i.e.`, because using `e.g.` again within the example felt redundant.\r\n\r\nIn summary, the changes are:\r\n1. in the first example, I abstracted away the format of the policy\r\n2. in the second one, I defined the policy format, so that I could use `i.e.` to mean a clear implication",
          "createdAt": "2024-03-04T16:45:53Z",
          "updatedAt": "2024-03-04T16:45:53Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKiCa6c5yIkC_",
          "commit": {
            "abbreviatedOid": "cd130cc"
          },
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-04T17:03:06Z",
          "updatedAt": "2024-03-04T17:03:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 11,
      "id": "PR_kwDOKiCa6c5lkfiV",
      "title": "Ability to transfer opaque application data",
      "url": "https://github.com/lake-wg/authz/pull/11",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Addressing #3.\r\n\r\nThe idea is to use 'ciphertext' from COSE_Encrypt0, which already has a MAC (the authentication tag), with the added benefit that now it is possible for W to send encrypted opaque data to U.",
      "createdAt": "2024-01-31T13:21:39Z",
      "updatedAt": "2024-02-26T14:24:55Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "c94faabf06cb97e2881248c1ece8f652c7ec5c7b",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "add-scope-to-voucher",
      "headRefOid": "5ed20fef1632f3796b7bd4e4d4642b2826844326",
      "closedAt": "2024-02-26T14:24:44Z",
      "mergedAt": "2024-02-26T14:24:44Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "981e71af06900d26281ad51507708c9167f659d0"
      },
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Some notes:\r\n- I am not sure `SCOPE` is the best name here. Maybe `OPAQUE_DATA` or similar (open to ideas).\r\n- I don't know if there is a rule for naming things like `K_2` and `info_label`, so I just incremented them from the values already in the draft.",
          "createdAt": "2024-01-31T13:47:36Z",
          "updatedAt": "2024-01-31T13:47:36Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Discussed in the design team meeting:\r\n\r\n```\r\n# from U to W:\r\nnow: plaintext = ID_U\r\ndesired: plaintext =\r\n\r\nENC_U_INFO = (\r\n  ID_U: bstr\r\n  ?opaque_info: bstr\r\n    e.g. available_networks, e.g. mac address (previously u_hints)\r\n)\r\n\r\n# from W to U:\r\nENC_W_INFO = (\r\n  ?opaque_info: bstr\r\n    e.g. selected/proposed_networks, e.g. mac address (previously v_hints)\r\n)\r\n```",
          "createdAt": "2024-02-02T08:56:47Z",
          "updatedAt": "2024-02-02T08:56:47Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Just to update on the above, what we really want is to enable transmission of an optional OPAQUE_INFO in the three cases below:\r\n\r\n```\r\n1. from U to W, within EAD_1 / Voucher_Info\r\nENC_U_INFO = (\r\n  ID_U: bstr\r\n  ?OPAQUE_INFO: bstr\r\n    e.g. available_networks, e.g. mac address (previously u_hints)\r\n)\r\n\r\n2. from W to U, within EAD_2 / Voucher\r\nplaintext of Voucher = (\r\n  ?OPAQUE_INFO: bstr\r\n    e.g. selected/proposed_networks, e.g. mac address (previously v_hints)\r\n)\r\n\r\n(note that in this case the MAC, which was originally the full content of the Voucher, will be the authentication tag generated during encryption)\r\n\r\n3. from W to U, within Error message\r\nplaintext of REJECT_INFO = (\r\n    ?OPAQUE_INFO:            bstr,\r\n)\r\n```\r\n\r\nIn this PR, cases 1 and 2 are addressed (I am updating its title).\r\nCase 3 is being handled in PR #9, and will be updated once this one is settled, as it is now establishing some new terminology.",
          "createdAt": "2024-02-06T11:13:40Z",
          "updatedAt": "2024-02-06T12:41:42Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@gselander I added an example of what could go in the voucher on commit [893d156](https://github.com/lake-wg/authz/pull/11/commits/893d156d4bfdea0a1a260822caf63163aa49a783). Could you please take a look?\r\n\r\n",
          "createdAt": "2024-02-09T16:17:17Z",
          "updatedAt": "2024-02-09T16:17:17Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 12,
      "id": "PR_kwDOKiCa6c5ls3YD",
      "title": "Update draft name and URLs",
      "url": "https://github.com/lake-wg/authz/pull/12",
      "state": "CLOSED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Similar to #8. This also updates the filename to match the working group draft name.\r\n\r\nNot sure how to update the diff URL though.",
      "createdAt": "2024-02-01T13:26:27Z",
      "updatedAt": "2025-07-07T15:15:33Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "ac30874fe99d1ca2c8f657e198844d467a08c57b",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "update-more-urls",
      "headRefOid": "3c0a45061c5d69276a7487072c9ed2de40415522",
      "closedAt": "2024-02-02T10:13:46Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Closing as it was solved in commits https://github.com/lake-wg/authz/commit/085fd96bce160938420a6aaadef62876539d0d8f and https://github.com/lake-wg/authz/commit/72a75a10e582c553ff1600d902d66a7346095f6b",
          "createdAt": "2024-02-02T10:13:42Z",
          "updatedAt": "2024-02-02T10:13:42Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 13,
      "id": "PR_kwDOKiCa6c5ls_Io",
      "title": "Add enrollment hints",
      "url": "https://github.com/lake-wg/authz/pull/13",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses #7. Work in progress.",
      "createdAt": "2024-02-01T13:42:22Z",
      "updatedAt": "2024-03-04T14:22:00Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "96776f116f44f9801783f6c325ebaeca81530de7",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "add-enrollment-hints",
      "headRefOid": "ff0d6c33389b954e20b87bcd2c067f88e9b954fe",
      "closedAt": "2024-03-04T14:21:55Z",
      "mergedAt": "2024-03-04T14:21:55Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "74a6c6d2bfa4641200728f05720aaa7a33ff604c"
      },
      "comments": [
        {
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I read through the changes, some minor comments: \r\n\r\n* If could be good to clarify that \u201cOPAQUE_INFO\u201d is opaque when viewed as information element in EDHOC. It is opaque to V but the application in U and W can read the contents.\r\n* \u201cThe hint is an optional field in EAD_1, and it must be encrypted.\u201d\r\nClarify that u_hint is included in OPAQUE_INFO.\r\n* Similarly, clarify that v_hint in included in REJECT_INFO\r\n* Nit: All words in upper case in titles: \"Enrollment hints\"->\"Enrollment Hints\", etc.",
          "createdAt": "2024-03-04T10:32:04Z",
          "updatedAt": "2024-03-04T10:32:04Z"
        },
        {
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "body": "One more comment: \r\n\r\n\"W generates error_content and transfers it to V via the secure connection.\"\r\n\r\nWe should explain how this message is part of the VREQ/VRES protocol. This is not necessary an error from the point of view of that protocol. If we don't have a quick fix, make a separate issue.\r\n\r\nEdit: For example, add a flag in VRES\r\n\r\nVoucher_Response = [\r\n    message_1:      bstr,\r\n    flag:               int,\r\n    response:        bstr,\r\n    ? opaque_state: bstr\r\n]\r\n\r\nflag = -1 is used with response = Voucher.  In case of reject, then (flag, response) = error_content.\r\n\r\n(or other preferred construction)\r\n\r\nEdit: Or reserve REJECT_TYPE = 0 for the no reject case. The flag/ REJECT_TYPE thus becomes a status code for the VREQ/VRES protocol. Maybe rename \"REJECT_TYPE\" accordingly. Or leave out for this update. ",
          "createdAt": "2024-03-04T10:40:19Z",
          "updatedAt": "2024-03-04T10:58:28Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thank you @chrysn and @gselander for your comments.\r\n\r\nNote that the reviewed text included more commits than just the hints. I just rebased it from master to include just the hints' update.\r\n\r\nFinally, @gselander I just addressed the comments that applied to the hints section. Will address the remaining ones in a separate issue.",
          "createdAt": "2024-03-04T14:00:10Z",
          "updatedAt": "2024-03-04T14:00:10Z"
        },
        {
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks @geonnave, ff0d6c3 looks good.",
          "createdAt": "2024-03-04T14:16:25Z",
          "updatedAt": "2024-03-04T14:16:25Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKiCa6c5yEq7v",
          "commit": {
            "abbreviatedOid": "ea029f4"
          },
          "author": "chrysn",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "The voucher details are something I care about, and that text looks good to me.",
          "createdAt": "2024-03-04T09:30:07Z",
          "updatedAt": "2024-03-04T09:30:07Z",
          "comments": []
        }
      ]
    },
    {
      "number": 14,
      "id": "PR_kwDOKiCa6c5mqLkz",
      "title": "Rename filename from individual name to ietf",
      "url": "https://github.com/lake-wg/authz/pull/14",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-02-12T17:04:45Z",
      "updatedAt": "2024-02-12T17:08:35Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "2bf9001c881352d01d91e93393601bc5c126889e",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "rename-draft-filename",
      "headRefOid": "1c0305c7e481397e706b7b98207f10d91c38f4c1",
      "closedAt": "2024-02-12T17:08:28Z",
      "mergedAt": "2024-02-12T17:08:28Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "c94faabf06cb97e2881248c1ece8f652c7ec5c7b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 15,
      "id": "PR_kwDOKiCa6c5n8MbF",
      "title": "Update error content with opaque info",
      "url": "https://github.com/lake-wg/authz/pull/15",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-02-26T16:51:16Z",
      "updatedAt": "2024-02-27T08:29:43Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "e678db91e8e64fb6a9290b8f6b554438b21b864f",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "update-erorr-with-opaque-info",
      "headRefOid": "cd11bd4ea42bb99fb69f70399b2f43aa1d191c0d",
      "closedAt": "2024-02-27T08:29:40Z",
      "mergedAt": "2024-02-27T08:29:40Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "96776f116f44f9801783f6c325ebaeca81530de7"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 16,
      "id": "PR_kwDOKiCa6c5omLzS",
      "title": "CoJP examples: Don't send extra Content-Format",
      "url": "https://github.com/lake-wg/authz/pull/16",
      "state": "MERGED",
      "author": "chrysn",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Sending these is optional in oscore-edhoc, and given there is a SHALL in the text, this needlessly increases the verbosity over the air.\r\n\r\n(I'm tempted to state something similar about the CON in message 1, especially with regard to RFC9031's text on join proxies, but at least that's more complicated, and removing content-format is easy).",
      "createdAt": "2024-03-04T14:19:59Z",
      "updatedAt": "2024-03-04T16:54:50Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "96776f116f44f9801783f6c325ebaeca81530de7",
      "headRepository": "chrysn-pull-requests/authz",
      "headRefName": "no-extra-ct",
      "headRefOid": "8ee5bd78050b99235766e1d4bf310cdf530ace78",
      "closedAt": "2024-03-04T16:54:50Z",
      "mergedAt": "2024-03-04T16:54:50Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "f4dc212f99e41b37be7aea286bf16b7381a3958b"
      },
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@malishav I think you have more context on the impact of this change, could you please take a look?",
          "createdAt": "2024-03-04T14:26:27Z",
          "updatedAt": "2024-03-04T14:26:27Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thank you for your contribution @chrysn!",
          "createdAt": "2024-03-04T16:54:46Z",
          "updatedAt": "2024-03-04T16:54:46Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKiCa6c5yHz3o",
          "commit": {
            "abbreviatedOid": "8ee5bd7"
          },
          "author": "malishav",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "I believe @chrysn is right. There is a SHALL in our text on how to transport the message but we include Content-Format there, although it is optionally transported (media-type can be inferred from the URI) according to draft-ietf-core-oscore-edhoc. I think the PR is OK to be merged.",
          "createdAt": "2024-03-04T15:40:19Z",
          "updatedAt": "2024-03-04T15:40:19Z",
          "comments": []
        }
      ]
    },
    {
      "number": 18,
      "id": "PR_kwDOKiCa6c5omuRC",
      "title": "Clarifications about the usage of OPAQUE_INFO",
      "url": "https://github.com/lake-wg/authz/pull/18",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Solves #17 ",
      "createdAt": "2024-03-04T15:29:30Z",
      "updatedAt": "2024-03-04T16:23:15Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "74a6c6d2bfa4641200728f05720aaa7a33ff604c",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "clarifications-opaque-info",
      "headRefOid": "d51adec35a6c688bd7fc4df97f5c15384780846d",
      "closedAt": "2024-03-04T16:23:12Z",
      "mergedAt": "2024-03-04T16:23:12Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "a5fe68b295b57624dd0c0c272818a9850c32a6ed"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKiCa6c5yH3lb",
          "commit": {
            "abbreviatedOid": "d51adec"
          },
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-04T15:46:35Z",
          "updatedAt": "2024-03-04T15:46:35Z",
          "comments": []
        }
      ]
    },
    {
      "number": 22,
      "id": "PR_kwDOKiCa6c5pgs_f",
      "title": "Fix github links and improve gitignore",
      "url": "https://github.com/lake-wg/authz/pull/22",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Addressing #20 ",
      "createdAt": "2024-03-13T14:01:46Z",
      "updatedAt": "2024-03-13T14:04:26Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "c531dcdc9070063bf16dc5680b03678e234def9f",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "fix-github-links",
      "headRefOid": "539f60c4da7bb0aec050768561d1f287f0542f78",
      "closedAt": "2024-03-13T14:04:23Z",
      "mergedAt": "2024-03-13T14:04:23Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "b7b276bbecea58ee0e547ef72e48c16bd9451261"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 28,
      "id": "PR_kwDOKiCa6c5ri3no",
      "title": "Explain error handling in the VREQ/VRES protocol leg",
      "url": "https://github.com/lake-wg/authz/pull/28",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses issue #19.\r\n\r\nI took a different approach than the one mentioned in #19, and decided to put the error signaling in the RESTful layer:\r\n- I think it makes sense, since a RESTful interface will be always present between V and W\r\n- Successful responses are already encoded as 200 OK, so this is just an extension of that\r\n\r\nI also modified the text in the `Voucher Request -> Processing in W` subsection to clarify where the error handling mechanism is plugged in.\r\n\r\nFinally, I am not sure if I should elaborate more in the construction `If ID_U is known by W`, i.e., define what it means to be \"known\". Perhaps it is enough the way it is?\r\nNote that one reason to differentiate between known and unknown Us is the privacy of radio identifiers of Vs when using hints (v_hints specifically), as discussed in issue #27.",
      "createdAt": "2024-04-03T10:15:06Z",
      "updatedAt": "2024-06-05T10:31:30Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "bed36c25823fb3708aa6ada0cac38ed67b2be824",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "add-error-vreq-vres",
      "headRefOid": "2eb46480fdd95b5a735eff1b45be5759ba7ef66c",
      "closedAt": "2024-06-05T10:27:41Z",
      "mergedAt": "2024-06-05T10:27:41Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "41293193800a42c8fb7906d095c04dedf0b4b949"
      },
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Suggestions applied, comment about HTTP-only status code addressed in PR #32.",
          "createdAt": "2024-04-16T09:54:39Z",
          "updatedAt": "2024-04-16T09:54:39Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKiCa6c5205pA",
          "commit": {
            "abbreviatedOid": "352281d"
          },
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Looks good, some comments: \r\n\r\nThese two sentences overlap each other:\r\n\r\n\"If H(message_1) is not unique among session identifiers associated to this device identifier of U, the EDHOC session SHALL be aborted.\r\n\r\nIf processing fails up until this point, the protocol SHALL be aborted with an error code signaling a generic issue with the request, see {{rest-voucher-request}}.\"\r\n\r\nPerhaps can be combined?\r\n\r\n\r\n\r\nOLD\r\n\"U cannot authenticate\"\r\nNEW\r\n\"U cannot be identified\"\r\n\r\n\r\n\"this happens either if W fails to process the Voucher Request, or if it succeeds but ID_U is considered unkonwn to W. In this case, W MUST reply with a 400 Bad Request.\"\r\n\r\nTypo:\"unkonwn\"\r\n\r\n400 Bad Request\r\nMust this be HTTP?\r\n\r\n\r\nOLD\r\n\"U is authenticated but unauthorized\"\r\nNEW\r\n\"U is identified but unauthorized\"\r\n\r\n\r\n",
          "createdAt": "2024-04-11T08:23:30Z",
          "updatedAt": "2024-04-11T08:23:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKiCa6c53s8V2",
          "commit": {
            "abbreviatedOid": "bae131b"
          },
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-18T08:53:42Z",
          "updatedAt": "2024-04-18T08:53:43Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "The original sentence is describe what action to take if message_1 has been received before. It is not clear from the new sentence how to make H(message_1) unique.",
              "createdAt": "2024-04-18T08:53:43Z",
              "updatedAt": "2024-04-18T08:53:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKiCa6c57wvZ7",
          "commit": {
            "abbreviatedOid": "b3cdf17"
          },
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-24T09:29:08Z",
          "updatedAt": "2024-05-24T09:29:08Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Pushed an update that removes the text about \"processing duplicates\", since that's not the only possible reason for wanting unique session ids per device (this was discussed in a previous meeting).\r\n\r\n#### Regarding your comment\r\n> The original sentence is describe what action to take if message_1 has been received before\r\n\r\nThe answer is that the newly introduced phrase in line 585 (\"If processing fails ...\") serves as a catch all action for any kind of error happening in the above paragraphs.\r\n\r\n> It is not clear from the new sentence how to make H(message_1) unique\r\n\r\nI don't see how the previous version is more clear. I also think that just stating that it should be unique is enough.",
              "createdAt": "2024-05-24T09:29:08Z",
              "updatedAt": "2024-05-24T09:29:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKiCa6c59F-qa",
          "commit": {
            "abbreviatedOid": "2eb4648"
          },
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-05T10:27:03Z",
          "updatedAt": "2024-06-05T10:27:04Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Pushed the solution proposed by @malishav. (now it doesn't use the SHALL in an incorrect way)",
              "createdAt": "2024-06-05T10:27:04Z",
              "updatedAt": "2024-06-05T10:27:04Z"
            }
          ]
        }
      ]
    },
    {
      "number": 29,
      "id": "PR_kwDOKiCa6c5rk-Si",
      "title": "Replace OPAQUE_INFO by NEARBY_VS in EAD_1",
      "url": "https://github.com/lake-wg/authz/pull/29",
      "state": "CLOSED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This is a sketch towards issue #23.\r\n\r\nStill not sure how to handle the possible representations of network identifiers listed in the table. For example: should MAC Addresses be sent only as bytes? And what about IPv6 address, should it always be 128 bits or also support compressed notation? (I think we don't want to over-engineer this).\r\n\r\n",
      "createdAt": "2024-04-03T14:35:09Z",
      "updatedAt": "2025-07-07T15:15:32Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "b7b276bbecea58ee0e547ef72e48c16bd9451261",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "make-opaque-concrete-ead1",
      "headRefOid": "642cf542b8dd43834019435fb350cfd7b8325158",
      "closedAt": "2024-10-18T12:54:57Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "body": "RFC9164 for IPv6 maybe.\r\n",
          "createdAt": "2024-04-03T14:55:32Z",
          "updatedAt": "2024-04-03T14:55:32Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> RFC9164 for IPv6\r\n\r\nThanks, I think we should use it.\r\n\r\nI was also not aware of the [CBOR tags registry](https://www.iana.org/assignments/cbor-tags/cbor-tags.xhtml), which has definitions for MAC Addresses.\r\n\r\nI think for sure we want to re-use the tag numbers, but I am not sure if we keep the semantics of the data items, considering that we will likely have a list of nearby_vs / hints, thus leading to duplication of tag values, which is not ideal given the constrained link between U and V.\r\n\r\nFor this we could define a special encoding _just to save bytes_ (similar to specific encodings found in EDHOC, e.g. when single-element uint arrays are encoded as just uint). For example we could:\r\n1. just tag a whole array, and all elements will have the same meaning\r\n2. put the tag as first element in the array\r\n\r\nThe advantage of (1) is using the tag as a proper tag, but the disadvantage is that the change in semantics of the data item might be misleading.\r\nAs for (2), it does not cause confusion with tag semantics, but it feels a bit hacky.",
          "createdAt": "2024-04-03T15:42:57Z",
          "updatedAt": "2024-04-03T15:42:57Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Just to clarify, I don't think of changing the representation of the identifiers, just how they are grouped with respect to a given tag.",
          "createdAt": "2024-04-03T15:44:14Z",
          "updatedAt": "2024-04-03T15:44:14Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Closing as obsolete, as result of discussions over privacy (#27) and after merging of #41. ",
          "createdAt": "2024-10-18T12:54:57Z",
          "updatedAt": "2024-10-18T12:54:57Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 30,
      "id": "PR_kwDOKiCa6c5r2spj",
      "title": "Update references now that EDHOC is an RFC",
      "url": "https://github.com/lake-wg/authz/pull/30",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-04-05T14:46:42Z",
      "updatedAt": "2024-04-08T07:40:14Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "b7b276bbecea58ee0e547ef72e48c16bd9451261",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "update-edhoc-references",
      "headRefOid": "fc361db1c8791553623236eee322c5088eddd3ed",
      "closedAt": "2024-04-08T07:40:11Z",
      "mergedAt": "2024-04-08T07:40:11Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "efbbecef4dd965fd4f658024325a1e3bf7a8eacc"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 31,
      "id": "PR_kwDOKiCa6c5sG5fX",
      "title": "Editorial updates addressing Marco's review",
      "url": "https://github.com/lake-wg/authz/pull/31",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Clarifications and editorial improvements based on @marco-tiloca-sics's [review on the LAKE mailing list](https://mailarchive.ietf.org/arch/msg/lake/ScUM1MfnWe7imi1IfWybrRZlzMw/).",
      "createdAt": "2024-04-09T09:28:46Z",
      "updatedAt": "2024-04-16T08:00:10Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "efbbecef4dd965fd4f658024325a1e3bf7a8eacc",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "addressing-marcos-review-20march2024",
      "headRefOid": "57925d144dbe0384d910df7c02a04125b4248599",
      "closedAt": "2024-04-16T08:00:06Z",
      "mergedAt": "2024-04-16T08:00:06Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "2f26fcee934b0d3b48cae8a4891cc4bd001e6290"
      },
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@gselander thank you for the review. \r\n\r\n> add Marco to the acknowledgments\r\n\r\nDone.",
          "createdAt": "2024-04-11T10:12:50Z",
          "updatedAt": "2024-04-11T10:12:50Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKiCa6c521Bwt",
          "commit": {
            "abbreviatedOid": "5ece90d"
          },
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Looks good. We should add Marco to the acknowledgments.",
          "createdAt": "2024-04-11T08:40:46Z",
          "updatedAt": "2024-04-11T08:40:46Z",
          "comments": []
        }
      ]
    },
    {
      "number": 32,
      "id": "PR_kwDOKiCa6c5sx-jh",
      "title": "Specify missing CoAP status codes and Content-Format",
      "url": "https://github.com/lake-wg/authz/pull/32",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "As per @marco-tiloca-sics's [review](https://mailarchive.ietf.org/arch/msg/lake/ScUM1MfnWe7imi1IfWybrRZlzMw/) of [Section 5.4.1] and [Section 5.4.2], and @gselander's comment on PR #28.\r\n\r\nFor now this is on top of PR #28, so to review look only at commit https://github.com/lake-wg/authz/commit/ebcfa62f45d343fcd794a8795e094e17b51e64b3.",
      "createdAt": "2024-04-16T09:52:47Z",
      "updatedAt": "2024-06-05T10:31:32Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "41293193800a42c8fb7906d095c04dedf0b4b949",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "http-and-coap-params-v-to-w",
      "headRefOid": "0601e86b525eb459979b266266f7b7a7fb55c794",
      "closedAt": "2024-06-05T10:31:25Z",
      "mergedAt": "2024-06-05T10:31:25Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "d864161ee1bcd7410f02f3704b1457b86db60e30"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKiCa6c53s9Bh",
          "commit": {
            "abbreviatedOid": "ebcfa62"
          },
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-18T08:55:00Z",
          "updatedAt": "2024-04-18T08:55:00Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "As in #28",
              "createdAt": "2024-04-18T08:55:00Z",
              "updatedAt": "2024-04-18T08:55:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKiCa6c57wwN6",
          "commit": {
            "abbreviatedOid": "ebcfa62"
          },
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-24T09:30:50Z",
          "updatedAt": "2024-05-24T09:30:50Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Answered [here in 28](https://github.com/lake-wg/authz/pull/28/files#r1613175478)",
              "createdAt": "2024-05-24T09:30:50Z",
              "updatedAt": "2024-05-24T09:30:50Z"
            }
          ]
        }
      ]
    },
    {
      "number": 33,
      "id": "PR_kwDOKiCa6c5s0Z4V",
      "title": "Rename section Problem Description to Outline",
      "url": "https://github.com/lake-wg/authz/pull/33",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "As per @marco-tiloca-sics's [review](https://mailarchive.ietf.org/arch/msg/lake/ScUM1MfnWe7imi1IfWybrRZlzMw/) of [Section 2].",
      "createdAt": "2024-04-16T15:21:55Z",
      "updatedAt": "2024-05-03T07:00:33Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "2f26fcee934b0d3b48cae8a4891cc4bd001e6290",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "rename-section-problem-to-objective",
      "headRefOid": "c235524c5b14fe10bc8722ac113e558263c990ce",
      "closedAt": "2024-05-03T07:00:24Z",
      "mergedAt": "2024-05-03T07:00:24Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "a899f5cc8c43fbdf74f70831a6faf6e55ec40a34"
      },
      "comments": [
        {
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Or perhaps better \"Outline\"",
          "createdAt": "2024-04-18T08:55:57Z",
          "updatedAt": "2024-04-18T08:55:57Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 34,
      "id": "PR_kwDOKiCa6c5tepf8",
      "title": "CDDL nits",
      "url": "https://github.com/lake-wg/authz/pull/34",
      "state": "MERGED",
      "author": "cabo",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-04-23T13:43:32Z",
      "updatedAt": "2024-06-05T12:07:35Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "d864161ee1bcd7410f02f3704b1457b86db60e30",
      "headRepository": "cabo/lake-authz",
      "headRefName": "cddl-nits",
      "headRefOid": "0400d838ccd6d7e8e7620d3528cfa283c53f1c9d",
      "closedAt": "2024-06-05T12:07:35Z",
      "mergedAt": "2024-06-05T12:07:35Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "b5dac6c38cadfdb3b5ca5c70e095c4f4e912328b"
      },
      "comments": [
        {
          "author": "cabo",
          "authorAssociation": "CONTRIBUTOR",
          "body": "There also is the weird construct COSE_Encrypt0.ciphertext -- this is a bstr, no?\r\n(Or do you allow null as well?)",
          "createdAt": "2024-04-23T13:45:16Z",
          "updatedAt": "2024-04-23T14:45:55Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thank you @cabo, the contributions look good.\r\n\r\n> There also is the weird construct COSE_Encrypt0.ciphertext -- this is a bstr, no?\r\n\r\nYes it is a bstr, we could update it to have `COSE_Encrypt0.ciphertext` mentioned in the text and `bstr` in the CDDL definition.",
          "createdAt": "2024-05-03T06:51:58Z",
          "updatedAt": "2024-05-03T06:51:58Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 36,
      "id": "PR_kwDOKiCa6c5tlOsh",
      "title": "Using EDHOC reverse message flow",
      "url": "https://github.com/lake-wg/authz/pull/36",
      "state": "CLOSED",
      "author": "gselander",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "For discussion. \r\n\r\nInstead of sending message_1, U sends a trigger over multicast/broadcast which leads to V sending message_1 to U. This allows a discovery process where EAD_1 could contain an EAD item specified in lake-authz, allowing advertisement of the use of the authz protocol, or certain deployment of authz, independent of underlying layer. This allows U to detect gateways supporting the authz protocol ,or certain deployment, and provide such information to W using the \"hints\" and allow an effficient deployment.\r\n\r\nEDHOC messages then follow with EAD_x having the content of EAD_(x-1) of the forward flow. \r\n\r\nNote that ID_CRED_R, sent in message_2, can now be empty because V will now run VREQ/VRES with W and in this case CRED_U can be returned without changing the basic identity protection assumption of EDHOC.",
      "createdAt": "2024-04-24T09:58:09Z",
      "updatedAt": "2025-03-03T15:49:56Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "b34568662436fae3f64e93437a7b3514e84d862c",
      "headRepository": "lake-wg/authz",
      "headRefName": "reverse-flow",
      "headRefOid": "f7c4a95ab2560f4bcbcb9f5517efa6edc91b6b7c",
      "closedAt": "2025-03-03T15:49:55Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think it is a good idea in that it also may help in the advertisement of lake-authz support.\r\n\r\nMy first thought is about the practicality of the `trigger/broadcast message` and the `reply with payload (message_1)`. Since I have some ongoing work about mapping to lake-authz to link layer technologies, I can add this topic in the discussions there (including the [hackathon side meeting](https://openwsn.atlassian.net/wiki/spaces/LAKE/pages/2390458394/lake-authz+and+link+layer)).\r\n\r\nThus, so far we have the following motivations / use cases for enabling a reverse message flow:\r\n- facilitating advertisement of the lake-authz feature\r\n  - which in turn may work as an opt-in and address privacy issues related to sharing of network identifiers, see issue #27 \r\n- some CoAP-over-GATT deployment scenario brought up by @chrysn in issue #21 ",
          "createdAt": "2024-05-03T08:35:01Z",
          "updatedAt": "2024-05-03T08:35:01Z"
        },
        {
          "author": "chrysn",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Sounds viable to me if #21 is viable.\r\n\r\nFor the broadcasting aspect, it may also be an option to broadcast a message_1. Sure, the EDHOC machinery may only advance for one selected peer (especially, sending two message_3 may be dangerous, even though I'm not sure why precisely, as long as all G_Y are distinct), but is there any harm done in decrypting (but not verifying) message_2, and then arriving at a binary decision to advance (and commit to the outcome of 5.3.3 step 6) only if ID_CRED_R and EAD_2 contains the right values?",
          "createdAt": "2024-05-04T22:46:38Z",
          "updatedAt": "2024-05-04T22:46:38Z"
        },
        {
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "body": "\n    > For the broadcasting aspect, it may also be an option to broadcast a\n    > message_1. Sure, the EDHOC machinery may only advance for one selected\n\nIt sounds harmless to do the survey in parallel, if all proxies lead to\ndifferent networks.  If they lead to the same network, then you've just\ncreated congestion.\n\n\n\n",
          "createdAt": "2024-05-06T09:52:32Z",
          "updatedAt": "2024-05-06T09:52:32Z"
        },
        {
          "author": "chrysn",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Amplification leading to congestion can be an issue with any multicast that causes later traffic (no matter whether it's an empty POST or a message_1). A message_1 in there may even help keep the traffic low, because if W can see that requests from different V contain the same message_1, can respond positively to the V that may enroll it, and tell the others off.",
          "createdAt": "2024-05-07T11:54:17Z",
          "updatedAt": "2024-05-07T11:54:17Z"
        },
        {
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "body": "We are discussing two different kinds of role reversal, change of EDHOC roles, or change of CoAP roles. This gives 4 cases:\r\n\r\n00. (00) No reversal. U = I = CoAP client, V = R = CoAP server.\r\n\r\n01. (01) EDHOC reverse message flow, as in A.2.2 of RFC 9528. In this case the CoAP roles are reversed so U = I = CoAP server and V = R = CoAP client, and a trigger message is included. This was the intent with this PR.\r\n\r\n10. (10) Reversing EDHOC roles in the lake-authz architecture. In this case V = I = CoAP client, U = R = CoAP server. \r\n\r\n11. (11) Reversal in cases 1 and 2 combined, i.e. U = R = CoAP client sends a CoAP request trigger message to V = I = CoAP server, which responds with message_1 etc. \r\n\r\nBroadcast/multicast/etc. of trigger seems useful at least in case 1, as discussed above, and does not seem harmful in case 3. \r\n\r\nHowever, broadcast of message_1 may be an issue. It may be tempting for applications to use multiple sessions resulting from different endpoints responding to the same message_1. The security analyses made for EDHOC may not apply if G_X is reused. Moreover, the same connection identifier C_I intended to be used by the Initiator to distinguish between sessions is now used by the Initiator in multiple sessions (which also means special care needed for OSCORE sessions for which different Sender/Recipient Identifiers are required).\r\n\r\nCan we restrict multicast to the trigger message, or what functionality / optimization would be lost if we do?\r\n\r\n",
          "createdAt": "2024-05-07T13:24:54Z",
          "updatedAt": "2024-05-08T08:52:50Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "In a design meeting, we discussed a fifth scenario:\r\n\r\n4. (100) No reversal, but with advertisement (e.g. via network beacons).\r\n\r\nHere is what I envision in this scenario:\r\n\r\n---\r\n\r\n#### Advertisement of lake-authz capability\r\nV may broadcast support for lake-authz using some network advertisement mechanism provided by the lower layer, e.g., link layer beacons.\r\nIf used, the advertisement may contain the following information:\r\n1. V supports lake-authz as a protocol. This can be indicated by the presence of an `authz-protocol` information element of type int and value TBD1.\r\n2. V is part of a particular instance/system implementing lake-authz (analogy: eduroam is an instance of EAP). This can be indicated by an `authz-instance` information element of type bstr whose value is specified by the application.\r\n\r\nThe exact formatting of the `authz-protocol` and `authz-instance` values is out of scope of this specification, as it depends on how each lower layer formats its advertisement packets.\r\n\r\nWhen U receives an advertisement containing either of these fields, this information should be made available to the application, which may use it to prioritize the selection of a suitable V.",
          "createdAt": "2024-06-05T09:08:28Z",
          "updatedAt": "2024-06-05T09:08:28Z"
        },
        {
          "author": "chrysn",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> However, broadcast of message_1 may be an issue\r\n\r\nThe \"using X multiple times\" aspect is why we should stop here. If one of the security teams could re-do their analysis assuming X reuse (with a check that it's only ever used with different Y), we can resume this, and then we can still fix this (because the direction where C_I is relevant has CoAP request-response binding, and then if C_I is relevant at the OSCORE level, the OSCORE identifiers can be changed in a combined CoAP/message 3 \u2013 but only if the X reuse holds).\r\n\r\nBroadcast on the network layer can still be useful without \"multicast EDHOC\", but would be more of an anycast use \u2013 if more than one device responds, that response would be rejected, and the next device waits for the next multicast that has a new G_X.\r\n\r\n> advertisements\r\n\r\nThe way I'm modeling those advertisements in CoAP-over-GATT is that they are a multicast requests in the CoAP sense. That way, they fall directly into the (11) flow and don't need to be regarded as out-of-band communication. That may or may not work for the link layers you have in mind.",
          "createdAt": "2024-06-05T09:24:51Z",
          "updatedAt": "2024-06-05T09:24:51Z"
        },
        {
          "author": "chrysn",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The \"broadcast on the network layer\" is now also an example in https://datatracker.ietf.org/doc/draft-amsuess-core-coap-over-gatt/07/ (section 4.2). Especially in combination with NIPC, this looks promising as a way to keep radio traffic for unenrolled devices low. But the way it is presented there right now, the default U=I setup holds, but I acts as the CoAP server, so it's reverse flow. It does technically send the first message, but that is a one-shot message expressed as an unsolicited response. (One might also do things subtly differently and invent a new flow, where I POSTs msg_1 with No-Response and waits for R to reverse roles mid-flight, which I don't see anything problematic with, but the phrasing as \"it's a response to a POST the client didn't send\" works well and is easier on the EDHOC-CoAP side of explanations).",
          "createdAt": "2024-09-25T13:15:37Z",
          "updatedAt": "2024-09-25T13:15:37Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks for referencing it there @chrysn, I added a back-reference to [here](https://github.com/lake-wg/authz/pull/41/files#diff-d6b094b88f44995cdbae2dd5a4b533e7a9a45cfe05bd8bf53017251c55019790R939) in #41. ",
          "createdAt": "2024-10-15T08:57:38Z",
          "updatedAt": "2024-10-15T08:57:38Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "An appendix explaining use with the EDHOC reverse flow was added and merged in #41. I believe this PR can now be closed.",
          "createdAt": "2024-10-18T12:54:01Z",
          "updatedAt": "2024-10-18T12:54:01Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Closing as obsolete after the merge of #45. Discussion can continue in new issues if needed.",
          "createdAt": "2025-03-03T15:49:55Z",
          "updatedAt": "2025-03-03T15:49:55Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 37,
      "id": "PR_kwDOKiCa6c5tnUPB",
      "title": "Read-through updates",
      "url": "https://github.com/lake-wg/authz/pull/37",
      "state": "MERGED",
      "author": "gselander",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I did a read through and found some bits and pieces. Please review.",
      "createdAt": "2024-04-24T14:56:47Z",
      "updatedAt": "2024-05-24T08:49:31Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "b34568662436fae3f64e93437a7b3514e84d862c",
      "headRepository": "lake-wg/authz",
      "headRefName": "read-through",
      "headRefOid": "f1dda65f1e9dfc0f125a6f583168d47854b7e100",
      "closedAt": "2024-05-24T08:49:31Z",
      "mergedAt": "2024-05-24T08:49:30Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "bed36c25823fb3708aa6ada0cac38ed67b2be824"
      },
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks, looks good to me.",
          "createdAt": "2024-05-03T07:22:46Z",
          "updatedAt": "2024-05-03T07:22:46Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKiCa6c55cjSz",
          "commit": {
            "abbreviatedOid": "f1dda65"
          },
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-03T07:17:55Z",
          "updatedAt": "2024-05-03T07:17:55Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "Why remove the text about the Voucher being carried in EAD_2?",
              "createdAt": "2024-05-03T07:17:55Z",
              "updatedAt": "2024-05-03T07:17:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKiCa6c55ckAG",
          "commit": {
            "abbreviatedOid": "f1dda65"
          },
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-03T07:20:07Z",
          "updatedAt": "2024-05-03T07:20:07Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "Nevermind, reading the section `#V_2` it makes sense. W does not know about EAD and EAD_2, only V.",
              "createdAt": "2024-05-03T07:20:07Z",
              "updatedAt": "2024-05-03T07:20:07Z"
            }
          ]
        }
      ]
    },
    {
      "number": 38,
      "id": "PR_kwDOKiCa6c5wrEB8",
      "title": "Credentials and clarifications",
      "url": "https://github.com/lake-wg/authz/pull/38",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "As of now, this is mostly intended as a place for discussion.",
      "createdAt": "2024-05-27T14:43:12Z",
      "updatedAt": "2025-07-07T15:15:29Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "b5dac6c38cadfdb3b5ca5c70e095c4f4e912328b",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "type-of-cred-v",
      "headRefOid": "18223c33bfcdd8417473859ab7f8bca3280164d3",
      "closedAt": "2024-06-13T07:20:35Z",
      "mergedAt": "2024-06-13T07:20:35Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "7e3e6a4da0fd319b4ca7d52b635b7cd655b040d5"
      },
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This is now ready for review.\r\n\r\nThe two main changes are:\r\n- generalize CRED_V over the text (so that it is not restricted to being a CCS)\r\n- improve the description of the different ways V and W can establish a secure channel, and the implications on the type of CRED_V and EDHOC method used by V (see `creds-table`).",
          "createdAt": "2024-06-05T12:55:58Z",
          "updatedAt": "2024-06-05T12:55:58Z"
        },
        {
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This looks good to me, I just proposed an updated caption.",
          "createdAt": "2024-06-13T05:05:42Z",
          "updatedAt": "2024-06-13T05:05:42Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 39,
      "id": "PR_kwDOKiCa6c50WIdX",
      "title": "Fix contact for media type registration",
      "url": "https://github.com/lake-wg/authz/pull/39",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Solves #35.\r\n\r\nI consulted some existing recent RFCs and apparently the most common approach is to refer to a WG or area. \r\nI decided to just link the WG.\r\nBelow are some examples.\r\n```\r\n- some use WG name, e.g. in RFCs 9553, 8949: \"IETF CBOR Working Group (cbor@ietf.org) or IETF Applications and Real-Time Area (art@ietf.org)\"\r\n- some use the IESG, e.g. in RFC 9525: \"iesg@ietf.org\"\r\n- some use just Author's Addresses with RFC name, e.g. in RFC 9528: \"See \"Authors' Addresses\" section in RFC 9528.\"\r\n```",
      "createdAt": "2024-07-03T15:59:58Z",
      "updatedAt": "2024-07-05T15:46:05Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "7e3e6a4da0fd319b4ca7d52b635b7cd655b040d5",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "fix-media-type-contact",
      "headRefOid": "388201a1a579b02d167ddc76131044701552b39b",
      "closedAt": "2024-07-05T15:46:01Z",
      "mergedAt": "2024-07-05T15:46:01Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "39487319d1a31dd1f509cb643535162a23d6cf0f"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 40,
      "id": "PR_kwDOKiCa6c5-L2gC",
      "title": "Protocol name: introduce abbreviated form 'ELA'",
      "url": "https://github.com/lake-wg/authz/pull/40",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Applying the ELA abbreviation as discussed with @malishav and @gselander. ",
      "createdAt": "2024-10-10T08:38:00Z",
      "updatedAt": "2024-10-18T08:31:47Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "bf4d0654051494f1b66e0bf99827283677e6db83",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "name-it-ela",
      "headRefOid": "e1f3a78b270ec63823fe5ea7cac13fa90f32c072",
      "closedAt": "2024-10-18T08:31:41Z",
      "mergedAt": "2024-10-18T08:31:41Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "365fc3cc08b1aff2c906dc0b4d10b77892fe8fa8"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 41,
      "id": "PR_kwDOKiCa6c5-PmRl",
      "title": "Add section Optimization Strategies",
      "url": "https://github.com/lake-wg/authz/pull/41",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Summary of the changes:\r\n\r\n**new** Section 5: Optimization Strategies, where broadcast and advertisement -based solutions are presented:\r\n- 5.1 U anycasts message_1 (previously approach A4)\r\n    - explains the approach and mention associated security/congestion considerations.\r\n- 5.2 V advertises support for ELA: \r\n    - describe the idea of adversiting ELA (sharing a V_INFO struct, whose definition depends on network/application)\r\n    - propose ELA_ID and DOMAIN_ID as guideline for implementers.\r\n\r\n**new** Appendix A: use with EDHOC reverse flow (Goran's PR [#36](https://github.com/lake-wg/authz/pull/36))\r\n\r\n**new** Appendix C: advertisement strategies\r\n(sampled from what we have discussed at length already)\r\n- C.1. V_INFO in network beacons (previously approach A1)\r\n- C.2. V_INFO in EAD_1 (previously approach A2)\r\n- C.3. V_INFO in a CoAP Multicast Packet (previously approach A3)\r\n",
      "createdAt": "2024-10-10T15:58:40Z",
      "updatedAt": "2024-10-18T12:35:21Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "365fc3cc08b1aff2c906dc0b4d10b77892fe8fa8",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "optimizations-broadcast-advertisement",
      "headRefOid": "e311b336c8b6b20ee89f5346c1f71c9f8189a049",
      "closedAt": "2024-10-18T12:35:17Z",
      "mergedAt": "2024-10-18T12:35:17Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "0fee49f1b55c89db4d1eda24eec994eacf36ee57"
      },
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "May still do some changes, but I think it can already receive reviews.",
          "createdAt": "2024-10-15T13:50:09Z",
          "updatedAt": "2024-10-15T13:50:09Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Merging -- changes were discussed in meeting with co-authors @gselander and @malishav on Oct 16.",
          "createdAt": "2024-10-18T12:34:34Z",
          "updatedAt": "2024-10-18T12:34:34Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 42,
      "id": "PR_kwDOKiCa6c5-r7WE",
      "title": "Remove hints",
      "url": "https://github.com/lake-wg/authz/pull/42",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This removes text related to sharing enrollment hints between U and W, as per privacy issue discussions in #27 and additional discussions during previous IETF and internal meetings.\r\n\r\nNote that this PR builds on top of #41 so, when reviewing, please only consider the latter commits.\r\n\r\nI am also thinking about the impacts on the Error Handling subsection: initially we wanted it to be actionable, that is why it contains the OPAQUE_INFO field, which was supposed to carry hints (e.g. a list of V's). If we remove that, the information conveyed by the error message will be limited to \"Access Denied\". One alternative would be to completely remove the new EDHOC Error definition, and just send \"Unspecified Error\" in case of failure at W (the limitation being that U has a bit less information about what went wrong).\r\nSo the question is: should we keep the \"Access Denied\" error, given that we are getting rid of the OPAQUE_INFO field in REJECT_INFO?",
      "createdAt": "2024-10-15T14:33:00Z",
      "updatedAt": "2024-10-18T12:52:21Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "0fee49f1b55c89db4d1eda24eec994eacf36ee57",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "remove-hints",
      "headRefOid": "781fe29bc96cccc1b02e8a05391e804801c5fbb9",
      "closedAt": "2024-10-18T12:52:18Z",
      "mergedAt": "2024-10-18T12:52:18Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "3026f6e6f5d32f796163b45ae79f7e9c42734a4c"
      },
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Merging, as discussed with co-authors in a design meeting.\r\n\r\nWe decided to keep the new error definition since \"Access Denied\" is still actionable in that U can choose to not retry enrollment with that same V again.",
          "createdAt": "2024-10-18T12:51:42Z",
          "updatedAt": "2024-10-18T12:51:42Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 43,
      "id": "PR_kwDOKiCa6c5_ShBs",
      "title": "No need for DTLS client auth when DTLS+EDHOC used for PoP",
      "url": "https://github.com/lake-wg/authz/pull/43",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixing an issue raised by Marco Tiloca during the last IETF meeting.\r\n\r\nRationale: client authentication is not needed for DTLS in the case that EDHOC is used for PoP.",
      "createdAt": "2024-10-21T09:27:19Z",
      "updatedAt": "2025-07-07T15:15:28Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "3026f6e6f5d32f796163b45ae79f7e9c42734a4c",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "fix-table-dtls-and-edhoc-case",
      "headRefOid": "251fd98bb232da586cece0ad6ebe86b6abc73f49",
      "closedAt": "2024-10-21T09:31:18Z",
      "mergedAt": "2024-10-21T09:31:18Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "bf8a84fa018e1be4d495348b9519cc5a2822ae73"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 44,
      "id": "PR_kwDOKiCa6c6L28EU",
      "title": "Ackowledge partial funding from EU's OpenSwarm project",
      "url": "https://github.com/lake-wg/authz/pull/44",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "As the title says.",
      "createdAt": "2025-02-20T08:14:11Z",
      "updatedAt": "2025-02-24T15:03:06Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "bf8a84fa018e1be4d495348b9519cc5a2822ae73",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "ack-openswarm",
      "headRefOid": "9ad22343a05da3862de93be59d54a30184e84a2a",
      "closedAt": "2025-02-24T15:02:14Z",
      "mergedAt": "2025-02-24T15:02:14Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "6da9920a1737171ead0ea22b96b3cf671bb91219"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 45,
      "id": "PR_kwDOKiCa6c6MUpiF",
      "title": "New subsection: U as EDHOC Initiator or Responder",
      "url": "https://github.com/lake-wg/authz/pull/45",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "and all the implications that come from it:\r\n- dedicated EAD labels for Voucher/Voucher_Info\r\n- security / interoperability considerations ",
      "createdAt": "2025-02-24T16:47:11Z",
      "updatedAt": "2025-03-03T15:44:28Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "69d5af53024ef25fa65b2792c7cdadb72cd15609",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "re-organize-sections",
      "headRefOid": "61314ea2abd022a3250a2f99c5d3707b477c776d",
      "closedAt": "2025-03-03T15:44:23Z",
      "mergedAt": "2025-03-03T15:44:23Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "b244e61398ff594ac497146cee37c9e1f18b0228"
      },
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "There is actually a significant amount of changes needed to the protocol when U is Responder. \r\nI hope to have updated the protocol with all the needed changes.\r\nImplications are yet to be written down.",
          "createdAt": "2025-02-28T09:26:39Z",
          "updatedAt": "2025-02-28T09:26:39Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@mcr I've moved the editorial changes to a separate PR (#47) and rebased this one on top of the new master.",
          "createdAt": "2025-03-03T08:47:11Z",
          "updatedAt": "2025-03-03T08:47:11Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Fixed some final details in this PR, and it is now ready.\r\nI am merging this now so that a new version can be published before draft cut-off for IETF 122.",
          "createdAt": "2025-03-03T15:43:50Z",
          "updatedAt": "2025-03-03T15:43:50Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKiCa6c6d93f9",
          "commit": {
            "abbreviatedOid": "3f76194"
          },
          "author": "malishav",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T09:37:33Z",
          "updatedAt": "2025-02-28T09:37:33Z",
          "comments": [
            {
              "originalPosition": 192,
              "body": "EAD_2 and EAD_3 are generic EDHOC fields. They are not identified with labels, they *carry* labels TBD1 and TBD2 in this protocol variant to denote Vocuher_Info and Voucher are within the field.",
              "createdAt": "2025-02-28T09:37:33Z",
              "updatedAt": "2025-02-28T09:37:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKiCa6c6d94F4",
          "commit": {
            "abbreviatedOid": "3f76194"
          },
          "author": "malishav",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T09:38:35Z",
          "updatedAt": "2025-02-28T09:38:35Z",
          "comments": [
            {
              "originalPosition": 214,
              "body": "Figure shows G_X is carried between U and V, should be G_Y?",
              "createdAt": "2025-02-28T09:38:35Z",
              "updatedAt": "2025-02-28T09:38:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKiCa6c6d96b9",
          "commit": {
            "abbreviatedOid": "3f76194"
          },
          "author": "malishav",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T09:42:31Z",
          "updatedAt": "2025-02-28T09:42:31Z",
          "comments": [
            {
              "originalPosition": 214,
              "body": "Same for H_message_1 which should be updated",
              "createdAt": "2025-02-28T09:42:31Z",
              "updatedAt": "2025-02-28T09:42:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKiCa6c6d9-MA",
          "commit": {
            "abbreviatedOid": "3f76194"
          },
          "author": "malishav",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T09:48:19Z",
          "updatedAt": "2025-02-28T09:48:20Z",
          "comments": [
            {
              "originalPosition": 249,
              "body": "A more general note here: V has no idea what ciphersuite W and U have pre-agreed to. It may therefore select a cipher suite that is different from the one selected by W and U. In this situation, U needs to reject the proposed cipher suite and start EDHOC session anew, as described in RFC 9528. In this draft, we clearly need to have a consideration somewhere on cipher suite negotiation and the assumption we make in the protocol that whatever cipher suite is used between U and W must also be used by V.",
              "createdAt": "2025-02-28T09:48:19Z",
              "updatedAt": "2025-02-28T09:48:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKiCa6c6d-DIr",
          "commit": {
            "abbreviatedOid": "3f76194"
          },
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T09:56:02Z",
          "updatedAt": "2025-02-28T09:56:02Z",
          "comments": [
            {
              "originalPosition": 192,
              "body": "Thanks, fixed.",
              "createdAt": "2025-02-28T09:56:02Z",
              "updatedAt": "2025-02-28T09:56:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKiCa6c6d-DKo",
          "commit": {
            "abbreviatedOid": "3f76194"
          },
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T09:56:05Z",
          "updatedAt": "2025-02-28T09:56:06Z",
          "comments": [
            {
              "originalPosition": 214,
              "body": "Thanks, fixed.",
              "createdAt": "2025-02-28T09:56:05Z",
              "updatedAt": "2025-02-28T09:56:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKiCa6c6d_zX1",
          "commit": {
            "abbreviatedOid": "3f76194"
          },
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T13:27:50Z",
          "updatedAt": "2025-02-28T13:27:50Z",
          "comments": [
            {
              "originalPosition": 249,
              "body": "Thanks for the comment. Tracking it in #46. ",
              "createdAt": "2025-02-28T13:27:50Z",
              "updatedAt": "2025-02-28T13:27:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKiCa6c6eCmyK",
          "commit": {
            "abbreviatedOid": "532c216"
          },
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "This PR seems to mix in a bunch of small edits with the new section.\r\nMaybe split into two PRs.",
          "createdAt": "2025-02-28T18:10:52Z",
          "updatedAt": "2025-02-28T18:11:49Z",
          "comments": [
            {
              "originalPosition": 202,
              "body": "Given the trigger message, put the voucher_info in it.",
              "createdAt": "2025-02-28T18:10:52Z",
              "updatedAt": "2025-02-28T18:11:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKiCa6c6eHk23",
          "commit": {
            "abbreviatedOid": "532c216"
          },
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-02T18:17:42Z",
          "updatedAt": "2025-03-02T18:17:43Z",
          "comments": [
            {
              "originalPosition": 202,
              "body": "The thing is that certain network technologies are (1) device sends first and others are (2) gateway sends first. That's why the trigger is optional. \r\nThe case for U as Responder addresses the case when gateway sends first. ",
              "createdAt": "2025-03-02T18:17:42Z",
              "updatedAt": "2025-03-02T18:17:43Z"
            }
          ]
        }
      ]
    },
    {
      "number": 47,
      "id": "PR_kwDOKiCa6c6NHWnw",
      "title": "Editorial: mention 'SS' as selected cipher suite in more places",
      "url": "https://github.com/lake-wg/authz/pull/47",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-03-03T08:44:18Z",
      "updatedAt": "2025-03-03T08:45:08Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "6da9920a1737171ead0ea22b96b3cf671bb91219",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "editorial-ss",
      "headRefOid": "b2219a3c0df81d10adaabb1aa0fd08cc4001cf19",
      "closedAt": "2025-03-03T08:45:04Z",
      "mergedAt": "2025-03-03T08:45:04Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "69d5af53024ef25fa65b2792c7cdadb72cd15609"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 48,
      "id": "PR_kwDOKiCa6c6NH0j4",
      "title": "Move optimization and advertisement sections to appendix",
      "url": "https://github.com/lake-wg/authz/pull/48",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Move all to appendix, and unify sections.\r\n\r\nBuilds on #45 ",
      "createdAt": "2025-03-03T09:39:30Z",
      "updatedAt": "2025-03-03T15:48:41Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "b244e61398ff594ac497146cee37c9e1f18b0228",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "rework-optimization-advertisement-sections",
      "headRefOid": "6d661e8a652ceae04b85b82f9792f089625d4b43",
      "closedAt": "2025-03-03T15:48:38Z",
      "mergedAt": "2025-03-03T15:48:38Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "cb509d3b25262d558807344d5e3d2aa57e66957c"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 49,
      "id": "PR_kwDOKiCa6c6NKx0v",
      "title": "Add note about pre-agreed cipher suites",
      "url": "https://github.com/lake-wg/authz/pull/49",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #46 ",
      "createdAt": "2025-03-03T15:17:25Z",
      "updatedAt": "2025-07-07T15:15:27Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "69d5af53024ef25fa65b2792c7cdadb72cd15609",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "46-clarify-cipher-suites",
      "headRefOid": "2880f8b427ea4e25149e72e9936b780faed80bed",
      "closedAt": "2025-03-03T15:35:33Z",
      "mergedAt": "2025-03-03T15:35:33Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "9f490862cd8941e1c8fa931a29998cf6ae4596bc"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 50,
      "id": "PR_kwDOKiCa6c6NLZmR",
      "title": "Editorial: fix typos and improve sentences",
      "url": "https://github.com/lake-wg/authz/pull/50",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-03-03T16:32:02Z",
      "updatedAt": "2025-03-03T16:32:49Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "cb509d3b25262d558807344d5e3d2aa57e66957c",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "editorial-fixes-before-04",
      "headRefOid": "d7cfd33ef58d9efc3cb13ae7e28fa5ffe3f35c19",
      "closedAt": "2025-03-03T16:32:42Z",
      "mergedAt": "2025-03-03T16:32:42Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "b36dc1de0403696846c298a39f8f2047b09ece94"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 54,
      "id": "PR_kwDOKiCa6c6c1hl3",
      "title": "Add note for IANA regarding preferred value range of EAD labels",
      "url": "https://github.com/lake-wg/authz/pull/54",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #52, addresses comment in #51.\r\n\r\n@gselander, I am not sure if the correct procedure is to specify concrete EAD labels now, directly in the draft.\r\n\r\nNevertheless, I checked the [IANA EDHOC External Authorization Data Registry](https://www.iana.org/assignments/edhoc/edhoc.xhtml#edhoc-ead) and the next available label is 1, so I am proposing to use 1 and 2 for Voucher_Info and Voucher, respectively. \r\n\r\nPlease let me know whether this is the right way to proceed or some adjustment is needed.",
      "createdAt": "2025-07-01T07:38:53Z",
      "updatedAt": "2025-07-07T15:15:21Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "b36dc1de0403696846c298a39f8f2047b09ece94",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "ead-label-value",
      "headRefOid": "7bc0ae209592fc5053447247dfc5c34172c6c18c",
      "closedAt": "2025-07-02T08:49:56Z",
      "mergedAt": "2025-07-02T08:49:56Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "c7ad537b455b09268bb75d7087001a6af13d1a63"
      },
      "comments": [
        {
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "body": "These numbers are assigned by IANA during the review process, please leave them unassigned. (It is also possible to request \"early allocation\", in that case IANA performs preliminary assignment earlier in the review process and then we can insert those values in the draft.)\r\n",
          "createdAt": "2025-07-01T07:45:08Z",
          "updatedAt": "2025-07-01T07:45:08Z"
        },
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks for the reply. I reverted my change, and pushed instead a note for IANA indicating the preferred value range, as asked in their comment listed in #51. ",
          "createdAt": "2025-07-01T08:30:57Z",
          "updatedAt": "2025-07-01T08:31:53Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 55,
      "id": "PR_kwDOKiCa6c6c2bk3",
      "title": "Addressing IANA review comments",
      "url": "https://github.com/lake-wg/authz/pull/55",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Address comments from #51:\r\n\r\n\r\n1) :heavy_check_mark:  :arrow_right:  addressed in PR #54 \r\n\r\n2) :heavy_check_mark:  Section 7.2: Please add the \u201cStatus\u201d field for the Well-Known URI.\r\n\r\n3) :warning: [under discussion in #51]  Section 7.3: Please add the \u201cDomain Name Reservation Considerations\u201d subsection\r\n\r\n4) :heavy_check_mark:  Section 7.4: Please replace the IESG with the IETF in the media type\u2019s change controller field.\r\n\r\n5) :heavy_check_mark:  Section 7.5: Please specify a preferred value range the CoAP Content-Format registration. \r\n",
      "createdAt": "2025-07-01T08:46:17Z",
      "updatedAt": "2025-07-07T15:15:20Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "b36dc1de0403696846c298a39f8f2047b09ece94",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "iana-review",
      "headRefOid": "160cb12e64fab7f8ef80163b315d9e2b676fe6e8",
      "closedAt": "2025-07-04T08:06:34Z",
      "mergedAt": "2025-07-04T08:06:34Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "cf3d45cce22e8624b66e48efa1f46b1655e1c351"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKiCa6c6x6pqJ",
          "commit": {
            "abbreviatedOid": "160cb12"
          },
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-07-03T23:20:48Z",
          "updatedAt": "2025-07-03T23:20:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 56,
      "id": "PR_kwDOKiCa6c6dDD4_",
      "title": "Update Acknowledgments section",
      "url": "https://github.com/lake-wg/authz/pull/56",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-07-02T09:12:17Z",
      "updatedAt": "2025-07-07T15:15:19Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "c7ad537b455b09268bb75d7087001a6af13d1a63",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "update-acks",
      "headRefOid": "754fc3d54d9a4ace85827e664e4c4f92963eb089",
      "closedAt": "2025-07-04T08:05:41Z",
      "mergedAt": "2025-07-04T08:05:41Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "f4c77fd717cbd9ce504eda735c405f36f8d9a807"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKiCa6c6x6z7C",
          "commit": {
            "abbreviatedOid": "754fc3d"
          },
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-07-04T00:04:55Z",
          "updatedAt": "2025-07-04T00:04:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 63,
      "id": "PR_kwDOKiCa6c6ddOpf",
      "title": "Add Considerations for .arpa domain",
      "url": "https://github.com/lake-wg/authz/pull/63",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Solves item 3 of #51. \r\n\r\nI am not sure if I need to reproduce the questions here when the answer is \"No\", or if I should give more details. ",
      "createdAt": "2025-07-04T14:27:43Z",
      "updatedAt": "2025-07-07T15:15:18Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "cf3d45cce22e8624b66e48efa1f46b1655e1c351",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "iana-arpa-considerations",
      "headRefOid": "62c360c967fbea3f9b41810e03374b9f119547cb",
      "closedAt": "2025-07-07T11:20:32Z",
      "mergedAt": "2025-07-07T11:20:32Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "30b88f183de0d0fb5921a9eb0946427ad1fed803"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKiCa6c6yG6VZ",
          "commit": {
            "abbreviatedOid": "62c360c"
          },
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-07-04T19:17:40Z",
          "updatedAt": "2025-07-04T19:17:40Z",
          "comments": []
        }
      ]
    },
    {
      "number": 64,
      "id": "PR_kwDOKiCa6c6ddS_L",
      "title": "Remove Editor's Note about TH_2 in reverse flow",
      "url": "https://github.com/lake-wg/authz/pull/64",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #60 ",
      "createdAt": "2025-07-04T14:34:21Z",
      "updatedAt": "2025-07-07T15:15:16Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "cf3d45cce22e8624b66e48efa1f46b1655e1c351",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "60-editors-note-th_2-is-internal-edhoc-state",
      "headRefOid": "558513a7b177dabf92e1428e134faf3f87b2667b",
      "closedAt": "2025-07-07T11:20:49Z",
      "mergedAt": "2025-07-07T11:20:49Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "b7902182150c5b398f3928e982154560db098030"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKiCa6c6yG6v0",
          "commit": {
            "abbreviatedOid": "558513a"
          },
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-07-04T19:18:15Z",
          "updatedAt": "2025-07-04T19:18:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKiCa6c6yJYb9",
          "commit": {
            "abbreviatedOid": "558513a"
          },
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-07-05T02:24:56Z",
          "updatedAt": "2025-07-05T02:24:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 65,
      "id": "PR_kwDOKiCa6c6ddavU",
      "title": "Interoperability of V: enforce regular flow and have reverse be optional",
      "url": "https://github.com/lake-wg/authz/pull/65",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #59 ",
      "createdAt": "2025-07-04T14:47:01Z",
      "updatedAt": "2025-07-07T11:21:10Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "cf3d45cce22e8624b66e48efa1f46b1655e1c351",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "59-editors-note-interoperability-of-v-supporting-one-or-both-flows",
      "headRefOid": "722f81903021814a2babd0d75ef6e7105790fff0",
      "closedAt": "2025-07-07T11:21:06Z",
      "mergedAt": "2025-07-07T11:21:06Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "263b9f7e9dea227b772a8dd01252e0e8c4299807"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKiCa6c6yG7L4",
          "commit": {
            "abbreviatedOid": "722f819"
          },
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-07-04T19:18:46Z",
          "updatedAt": "2025-07-04T19:18:46Z",
          "comments": []
        }
      ]
    },
    {
      "number": 66,
      "id": "PR_kwDOKiCa6c6ddrK0",
      "title": "Add example opaque state for stateless V",
      "url": "https://github.com/lake-wg/authz/pull/66",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #57 ",
      "createdAt": "2025-07-04T15:15:15Z",
      "updatedAt": "2025-07-07T12:52:49Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "cf3d45cce22e8624b66e48efa1f46b1655e1c351",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "57-editors-note-example-of-serialized-internal-state",
      "headRefOid": "84ccdcdaeeafd644c1839c6a9e39e3a8c6ccb783",
      "closedAt": "2025-07-07T12:52:45Z",
      "mergedAt": "2025-07-07T12:52:45Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "1e91582a15564cc0d4ded45c8b0c0ad1fb8d5f13"
      },
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@mcr thanks for the review. I now suggest using COSE_Encrypt0 with an AEAD algorithm, which achieves both.",
          "createdAt": "2025-07-07T12:52:28Z",
          "updatedAt": "2025-07-07T12:52:28Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKiCa6c6yG92p",
          "commit": {
            "abbreviatedOid": "9d71141"
          },
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "When we did this in draft-ietf-anima-join-proxy, we realized that the *can* be encrypted, but what counts is that it's authenticated.   We were more bytes sensitive than I think the V->W connection here is, so COSE is fine, but probably we should say one can use COSE_Mac0, with a symmetric key known only to V.",
          "createdAt": "2025-07-04T19:21:40Z",
          "updatedAt": "2025-07-04T19:21:40Z",
          "comments": []
        }
      ]
    },
    {
      "number": 67,
      "id": "PR_kwDOKiCa6c6deVmM",
      "title": "Clarification about reuse of TLS in V<->W",
      "url": "https://github.com/lake-wg/authz/pull/67",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #61 ",
      "createdAt": "2025-07-04T16:50:11Z",
      "updatedAt": "2025-07-07T11:57:41Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "cf3d45cce22e8624b66e48efa1f46b1655e1c351",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "61-editors-note-tls-reuse",
      "headRefOid": "7981fc2b3ad12a8bc303faa60782f09a665b8a14",
      "closedAt": "2025-07-07T11:57:39Z",
      "mergedAt": "2025-07-07T11:57:39Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "66dcd21d37091b9ae7995376b8093e4e9b569dd0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKiCa6c6yJVo3",
          "commit": {
            "abbreviatedOid": "6907fa6"
          },
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-05T02:21:45Z",
          "updatedAt": "2025-07-05T02:21:46Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nThe relationship between V and W is long-lived.  HTTP/1.1 and higher support persistent connections, and SHOULD be used in order to reduce overhead if a flood of new devices need to be onboarded.  Support for TLS session resumptions tickets {{RFC8446, Section 2.2}} is appropriate for longer term associations.\r\nWhile a policy for renewal of the TLS connection should be applied, it is out of scope of this document.\r\n```\r\n\r\n{Do we really need to say anything?  This connection between non-constrained systems on non-challenged networks should not be controversial}\r\n",
              "createdAt": "2025-07-05T02:21:45Z",
              "updatedAt": "2025-07-05T02:21:46Z"
            }
          ]
        }
      ]
    },
    {
      "number": 68,
      "id": "PR_kwDOKiCa6c6deYEr",
      "title": "Solve editor note about dropping msg_1",
      "url": "https://github.com/lake-wg/authz/pull/68",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #62 ",
      "createdAt": "2025-07-04T16:57:18Z",
      "updatedAt": "2025-07-07T11:30:52Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "cf3d45cce22e8624b66e48efa1f46b1655e1c351",
      "headRepository": "lake-wg/authz",
      "headRefName": "62-editors-note-dropping-message_1",
      "headRefOid": "d7dec432f65e6c7a78cd0d04c1f05ba7ba8613c3",
      "closedAt": "2025-07-07T11:30:52Z",
      "mergedAt": "2025-07-07T11:30:52Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "1c265be592d695efa29bdf2fb65e9cbbcf0b3ade"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 69,
      "id": "PR_kwDOKiCa6c6dehUI",
      "title": "Add more context to external_aad in Voucher_Info",
      "url": "https://github.com/lake-wg/authz/pull/69",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #58 \r\n\r\nI simply added more context from the EDHOC message_1, in addition to a fixed label for this specific message. I appreciate expert reviews on whether this really makes sense, cc @gselander @emanjon. ",
      "createdAt": "2025-07-04T17:23:17Z",
      "updatedAt": "2025-07-07T11:29:03Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "263b9f7e9dea227b772a8dd01252e0e8c4299807",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "58-editors-note-add-more-context-to-external_aad",
      "headRefOid": "d8b91d02d77aaf18a3e8026aee52c0016d47740f",
      "closedAt": "2025-07-07T11:28:59Z",
      "mergedAt": "2025-07-07T11:28:59Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "118fbbd362d4acd0b976e42a7941f72f67653c82"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKiCa6c6yJYQi",
          "commit": {
            "abbreviatedOid": "dc5fced"
          },
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-07-05T02:24:45Z",
          "updatedAt": "2025-07-05T02:24:45Z",
          "comments": []
        }
      ]
    },
    {
      "number": 70,
      "id": "PR_kwDOKiCa6c6dx_cu",
      "title": "Remove editor notes which were already solved",
      "url": "https://github.com/lake-wg/authz/pull/70",
      "state": "MERGED",
      "author": "geonnave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "(they were solved in previously merged PRs)",
      "createdAt": "2025-07-07T15:14:10Z",
      "updatedAt": "2025-07-07T15:15:01Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "1e91582a15564cc0d4ded45c8b0c0ad1fb8d5f13",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "fix-remove-dangling-notes",
      "headRefOid": "50c8293d2df26edc4bfca383dc895bcb2870cfe4",
      "closedAt": "2025-07-07T15:14:58Z",
      "mergedAt": "2025-07-07T15:14:58Z",
      "mergedBy": "geonnave",
      "mergeCommit": {
        "oid": "43561859753f05ccc8c16cd671d3b13d76ddc1f3"
      },
      "comments": [],
      "reviews": []
    }
  ]
}